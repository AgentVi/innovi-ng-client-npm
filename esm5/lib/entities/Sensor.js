import { __extends } from "tslib";
import { BaseEntity } from '../entities/BaseEntity';
/*
   Sensor type
*/
var Sensor = /** @class */ (function (_super) {
    __extends(Sensor, _super);
    function Sensor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return Sensor;
}(BaseEntity));
export { Sensor };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2Vuc29yLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFnZW50dmkvbmctY29yZS1saWIvIiwic291cmNlcyI6WyJsaWIvZW50aXRpZXMvU2Vuc29yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFHQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFPcEQ7O0VBRUU7QUFDRjtJQUE0QiwwQkFBVTtJQUF0Qzs7SUF1RkEsQ0FBQztJQUFELGFBQUM7QUFBRCxDQUFDLEFBdkZELENBQTRCLFVBQVUsR0F1RnJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3RyZWFtVHlwZUNvZGUgfSBmcm9tICcuLi9lbnVtcy9TdHJlYW1UeXBlQ29kZSc7XG5pbXBvcnQgeyBTZW5zb3JSZXNvbHV0aW9uQ29kZSB9IGZyb20gJy4uL2VudW1zL1NlbnNvclJlc29sdXRpb25Db2RlJztcbmltcG9ydCB7IEZvdkdlb0F0dHJpYnV0ZXMgfSBmcm9tICcuLi9jb21tb24vRm92R2VvQXR0cmlidXRlcyc7XG5pbXBvcnQgeyBCYXNlRW50aXR5IH0gZnJvbSAnLi4vZW50aXRpZXMvQmFzZUVudGl0eSc7XG5pbXBvcnQgeyBTZW5zb3JUeXBlQ29kZSB9IGZyb20gJy4uL2VudW1zL1NlbnNvclR5cGVDb2RlJztcbmltcG9ydCB7IFNlbnNvclN0YXR1c0NvZGUgfSBmcm9tICcuLi9lbnVtcy9TZW5zb3JTdGF0dXNDb2RlJztcbmltcG9ydCB7IENvb3JkaW5hdGUgfSBmcm9tICcuLi9jb21tb24vQ29vcmRpbmF0ZSc7XG5pbXBvcnQgeyBTdHJpbmdLZXlWYWx1ZSB9IGZyb20gJy4uL2NvbW1vbi9TdHJpbmdLZXlWYWx1ZSc7XG5pbXBvcnQgeyBTZW5zb3JEZWJ1Z0luZm8gfSBmcm9tICcuLi9jb21tb24vU2Vuc29yRGVidWdJbmZvJztcblxuLyogXG4gICBTZW5zb3IgdHlwZSBcbiovXG5leHBvcnQgY2xhc3MgU2Vuc29yIGV4dGVuZHMgQmFzZUVudGl0eSB7XG4gXG4gICAgLy8gQWNjb3VudCBJZCBcbiAgICBwdWJsaWMgYWNjb3VudElkOiBzdHJpbmc7XG4gXG4gICAgLy8gRm9sZGVyIElkIChlbXB0eSBmb3Igcm9vdCBmb2xkZXIpIFxuICAgIHB1YmxpYyBmb2xkZXJJZDogc3RyaW5nO1xuIFxuICAgIC8vIEFwcGxpYW5jZSBJZCBcbiAgICBwdWJsaWMgYXBwbGlhbmNlSWQ6IHN0cmluZztcbiBcbiAgICAvLyBBZ2VudCBJZCAoUmVsZXZhbnQgZm9yIG5ldyBwaXBlbGluZSBvbmx5KSBcbiAgICBwdWJsaWMgYWdlbnRJZDogc3RyaW5nO1xuIFxuICAgIC8vIFNlbnNvciBuYW1lIFxuICAgIHB1YmxpYyBuYW1lOiBzdHJpbmc7XG4gXG4gICAgLy8gU2Vuc29yIHR5cGU6IENDRCB8IFRIRVJNQUwgXG4gICAgcHVibGljIHR5cGU6IFNlbnNvclR5cGVDb2RlO1xuIFxuICAgIC8vIFNlbnNvciBzdGF0dXM6IFVOREVGSU5FRCB8IEFDVElWRSB8IFdBUk5JTkcgfCBFUlJPUiB8IElOQUNUSVZFIHwgU1VTUEVOREVEIHwgUEVORElORyBcbiAgICBwdWJsaWMgc3RhdHVzOiBTZW5zb3JTdGF0dXNDb2RlO1xuIFxuICAgIC8vIFNlbnNvciByZWFsIHRpbWUgc3RhdGUgYml0IG1hc2sgZmxhZ3MgXG4gICAgcHVibGljIHN0YXRlOiBudW1iZXI7XG4gXG4gICAgLy8gV2hlbiB3YXMgdGhlIGxhc3Qgc3RhdGUgcmVwb3J0IHVwZGF0ZSBbRXBvY2ggbWlsbGlzZWNvbmRzIFRpbWVzdGFtcF0gXG4gICAgcHVibGljIHN0YXRlUmVwb3J0ZWRPbjogbnVtYmVyO1xuIFxuICAgIC8vIFNlbnNvciB2aWRlbyBzdHJlYW0gdHlwZTogVU5ERUZJTkVEIHwgUlRTUCB8IE9OVklGIHwgQ0xJUCB8IFJUUCB8IE1VTFRJQ0FTVCBcbiAgICBwdWJsaWMgc3RyZWFtVHlwZTogU3RyZWFtVHlwZUNvZGU7XG4gXG4gICAgLy8gU2Vuc29yIHJlc29sdXRpb24gKGltYWdlIHF1YWxpdHkpOiBMT1cgKDApIHwgTUVESVVNICgxKSB8IEhJR0ggKDIpIFxuICAgIHB1YmxpYyBpbWFnZVJlc29sdXRpb246IFNlbnNvclJlc29sdXRpb25Db2RlO1xuIFxuICAgIC8vIEZsYWcgdG8gaW5kaWNhdGUgaWYgc2Vuc29yIGlzIHJlY29yZGluZyB2aWRlbyBcbiAgICBwdWJsaWMgcmVjb3JkaW5nOiBib29sZWFuO1xuIFxuICAgIC8vIEZsYWcgdG8gaW5kaWNhdGUgaWYgc2Vuc29yIHNob3VsZCBzZW5kIG1ldGFkYXRhIFxuICAgIHB1YmxpYyBtZXRhZGF0YTogYm9vbGVhbjtcbiBcbiAgICAvLyBGbGFnIHRvIGluZGljYXRlIGlmIGFub21hbHkgZGV0ZWN0aW9uIGlzIGVuYWJsZWQgZm9yIHRoaXMgc2Vuc29yIFxuICAgIHB1YmxpYyBhbm9tYWx5RGV0ZWN0aW9uOiBib29sZWFuO1xuIFxuICAgIC8vIE1pbmltYWwgdGltZSBpbnRlcnZhbCBiZXR3ZWVuIGFsYXJtcyAoaW4gc2Vjb25kcykgLSAwIGZvciBubyBpbnRlcnZhbCBcbiAgICBwdWJsaWMgYWxhcm1JbnRlcnZhbDogbnVtYmVyO1xuIFxuICAgIC8vIE1heCBudW1iZXIgb2YgYm91bmRpbmcgYm94IHBlciBmcmFtZSBcbiAgICBwdWJsaWMgbWF4QkJveFBlckZyYW1lOiBudW1iZXI7XG4gXG4gICAgLy8gTWF4IGZyYW1lIHJhdGUgXG4gICAgcHVibGljIG1heEZyYW1lUmF0ZTogbnVtYmVyO1xuIFxuICAgIC8vIFZpZGVvIHN0cmVhbSBzb3VyY2UgVVJJIFxuICAgIHB1YmxpYyBzdHJlYW1Vcmk6IHN0cmluZztcbiBcbiAgICAvLyBTZW5zb3IgZ2VvIGxvY2F0aW9uIChXR1MtODQgY29vcmRpbmF0ZSBzeXN0ZW0pIFxuICAgIHB1YmxpYyBnZW9Mb2NhdGlvbjogQ29vcmRpbmF0ZTtcbiBcbiAgICAvLyBTZW5zb3IgRk9WIGF6aW11dGggKDAgLSAzNTkpIFxuICAgIHB1YmxpYyBhemltdXRoOiBudW1iZXI7XG4gXG4gICAgLy8gRmllbGQgb2YgVmlldyBHZW8gYXR0cmlidXRlcyAodXNlZCBmb3IgRk9WIHRvIFdHUy04NCB0cmFuc2Zvcm1hdGlvbnMpIFxuICAgIHB1YmxpYyBmb3ZBdHRyaWJ1dGVzOiBGb3ZHZW9BdHRyaWJ1dGVzO1xuIFxuICAgIC8vIEV4dGVybmFsIGlkIChjYW1lcmEgaWQgaW4gZXh0ZXJuYWwgc3lzdGVtKSBcbiAgICBwdWJsaWMgZXh0ZXJuYWxJZDogc3RyaW5nO1xuIFxuICAgIC8vIFVzZXIgZGVmaW5lZCB0YWdzIChsaXN0IG9mIGtleS12YWx1ZSBwYWlycykgXG4gICAgcHVibGljIHRhZ3M6IFN0cmluZ0tleVZhbHVlW107XG4gXG4gICAgLy8gU2Vuc29yIGRlYnVnIGluZm9ybWF0aW9uIGZsYWdzIFxuICAgIHB1YmxpYyBkZWJ1Z0luZm86IFNlbnNvckRlYnVnSW5mbztcbiBcbiAgICAvLyBFbnRpdHkgSWQgXG4gICAgcHVibGljIGlkOiBzdHJpbmc7XG4gXG4gICAgLy8gRW50aXR5IGRvY3VtZW50IHR5cGUgKHN5c3RlbSBmaWVsZCkgXG4gICAgcHVibGljIF90eXBlOiBzdHJpbmc7XG4gXG4gICAgLy8gV2hlbiB0aGUgZW50aXR5IHdhcyBjcmVhdGVkIFtFcG9jaCBtaWxsaXNlY29uZHMgVGltZXN0YW1wXSBcbiAgICBwdWJsaWMgY3JlYXRlZE9uOiBudW1iZXI7XG4gXG4gICAgLy8gV2hlbiB0aGUgZW50aXR5IHdhcyB1cGRhdGVkIFtFcG9jaCBtaWxsaXNlY29uZHMgVGltZXN0YW1wXSBcbiAgICBwdWJsaWMgdXBkYXRlZE9uOiBudW1iZXI7XG4gXG5cbn1cblxuXG4iXX0=