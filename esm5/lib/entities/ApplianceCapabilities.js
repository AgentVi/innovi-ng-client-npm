/*
   Edge appliance capabilities full report <br>
   This structure describes the HW and SW spec of the device, most of the data is collected by the software and provided by the device<br>
   Some fields represents the device configuration (report intervals, docker credentials, components versions etc) and they are provided by the backend on device registration.
*/
var ApplianceCapabilities = /** @class */ (function () {
    function ApplianceCapabilities(productType, serialNumber, deviceModel, cpuModel, uuid, ip, host, dockerVersion, kernelVersion, totalRam, disks, commandInterval, statusInterval, dockerCredentials, configurationVersion, profileId) {
        this.productType = productType;
        this.serialNumber = serialNumber;
        this.deviceModel = deviceModel;
        this.cpuModel = cpuModel;
        this.uuid = uuid;
        this.ip = ip;
        this.host = host;
        this.dockerVersion = dockerVersion;
        this.kernelVersion = kernelVersion;
        this.totalRam = totalRam;
        this.disks = disks;
        this.commandInterval = commandInterval;
        this.statusInterval = statusInterval;
        this.dockerCredentials = dockerCredentials;
        this.configurationVersion = configurationVersion;
        this.profileId = profileId;
    }
    return ApplianceCapabilities;
}());
export { ApplianceCapabilities };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXBwbGlhbmNlQ2FwYWJpbGl0aWVzLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFnZW50dmkvbmctY29yZS1saWIvIiwic291cmNlcyI6WyJsaWIvZW50aXRpZXMvQXBwbGlhbmNlQ2FwYWJpbGl0aWVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUtBOzs7O0VBSUU7QUFDRjtJQWtESSwrQkFBWSxXQUE2QixFQUFFLFlBQXFCLEVBQUUsV0FBb0IsRUFBRSxRQUFpQixFQUFFLElBQWEsRUFBRSxFQUFXLEVBQUUsSUFBYSxFQUFFLGFBQXNCLEVBQUUsYUFBc0IsRUFBRSxRQUFpQixFQUFFLEtBQWtCLEVBQUUsZUFBd0IsRUFBRSxjQUF1QixFQUFFLGlCQUFxQyxFQUFFLG9CQUEyQyxFQUFFLFNBQWtCO1FBQ2xZLElBQUksQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFDO1FBQy9CLElBQUksQ0FBQyxZQUFZLEdBQUcsWUFBWSxDQUFDO1FBQ2pDLElBQUksQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFDO1FBQy9CLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDO1FBQ2IsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLGFBQWEsR0FBRyxhQUFhLENBQUM7UUFDbkMsSUFBSSxDQUFDLGFBQWEsR0FBRyxhQUFhLENBQUM7UUFDbkMsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDekIsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLGVBQWUsR0FBRyxlQUFlLENBQUM7UUFDdkMsSUFBSSxDQUFDLGNBQWMsR0FBRyxjQUFjLENBQUM7UUFDckMsSUFBSSxDQUFDLGlCQUFpQixHQUFHLGlCQUFpQixDQUFDO1FBQzNDLElBQUksQ0FBQyxvQkFBb0IsR0FBRyxvQkFBb0IsQ0FBQztRQUNqRCxJQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztJQUMvQixDQUFDO0lBRUwsNEJBQUM7QUFBRCxDQUFDLEFBckVELElBcUVDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJvZHVjdFR5cGVDb2RlIH0gZnJvbSAnLi4vZW51bXMvUHJvZHVjdFR5cGVDb2RlJztcbmltcG9ydCB7IERpc2tJbmZvIH0gZnJvbSAnLi4vY29tbW9uL0Rpc2tJbmZvJztcbmltcG9ydCB7IERvY2tlckNyZWRlbnRpYWxzIH0gZnJvbSAnLi4vY29tbW9uL0RvY2tlckNyZWRlbnRpYWxzJztcbmltcG9ydCB7IENvbmZpZ3VyYXRpb25WZXJzaW9uIH0gZnJvbSAnLi4vZW50aXRpZXMvQ29uZmlndXJhdGlvblZlcnNpb24nO1xuXG4vKiBcbiAgIEVkZ2UgYXBwbGlhbmNlIGNhcGFiaWxpdGllcyBmdWxsIHJlcG9ydCA8YnI+XG4gICBUaGlzIHN0cnVjdHVyZSBkZXNjcmliZXMgdGhlIEhXIGFuZCBTVyBzcGVjIG9mIHRoZSBkZXZpY2UsIG1vc3Qgb2YgdGhlIGRhdGEgaXMgY29sbGVjdGVkIGJ5IHRoZSBzb2Z0d2FyZSBhbmQgcHJvdmlkZWQgYnkgdGhlIGRldmljZTxicj5cbiAgIFNvbWUgZmllbGRzIHJlcHJlc2VudHMgdGhlIGRldmljZSBjb25maWd1cmF0aW9uIChyZXBvcnQgaW50ZXJ2YWxzLCBkb2NrZXIgY3JlZGVudGlhbHMsIGNvbXBvbmVudHMgdmVyc2lvbnMgZXRjKSBhbmQgdGhleSBhcmUgcHJvdmlkZWQgYnkgdGhlIGJhY2tlbmQgb24gZGV2aWNlIHJlZ2lzdHJhdGlvbi4gXG4qL1xuZXhwb3J0IGNsYXNzIEFwcGxpYW5jZUNhcGFiaWxpdGllcyB7XG4gXG4gICAgLy8gUHJvZHVjdCB0eXBlIGNvZGUgKChwcm92aWRlZCBieSB0aGUgZGV2aWNlLCBpbmplY3RlZCkgXG4gICAgcHVibGljIHByb2R1Y3RUeXBlOiBQcm9kdWN0VHlwZUNvZGU7XG4gXG4gICAgLy8gQXBwbGlhbmNlIEhXIHNlcmlhbCBudW1iZXIgKHByb3ZpZGVkIGJ5IHRoZSBkZXZpY2UpIFxuICAgIHB1YmxpYyBzZXJpYWxOdW1iZXI6IHN0cmluZztcbiBcbiAgICAvLyBBcHBsaWFuY2UgSFcgbW9kZWwgbmFtZSAocHJvdmlkZWQgYnkgdGhlIGRldmljZSkgXG4gICAgcHVibGljIGRldmljZU1vZGVsOiBzdHJpbmc7XG4gXG4gICAgLy8gQXBwbGlhbmNlIENQVSBtb2RlbCBuYW1lIChwcm92aWRlZCBieSB0aGUgZGV2aWNlKSBcbiAgICBwdWJsaWMgY3B1TW9kZWw6IHN0cmluZztcbiBcbiAgICAvLyBBcHBsaWFuY2UgVVBuUCBVVUlEIChwcm92aWRlZCBieSB0aGUgZGV2aWNlKSBcbiAgICBwdWJsaWMgdXVpZDogc3RyaW5nO1xuIFxuICAgIC8vIEFwcGxpYW5jZSBJUCBhZGRyZXNzIChwcm92aWRlZCBieSB0aGUgZGV2aWNlKSBcbiAgICBwdWJsaWMgaXA6IHN0cmluZztcbiBcbiAgICAvLyBBcHBsaWFuY2UgSG9zdCBuYW1lIChwcm92aWRlZCBieSB0aGUgZGV2aWNlKSBcbiAgICBwdWJsaWMgaG9zdDogc3RyaW5nO1xuIFxuICAgIC8vIERvY2tlciBlbmdpbmUgdmVyc2lvbiAocHJvdmlkZWQgYnkgdGhlIGRldmljZSkgXG4gICAgcHVibGljIGRvY2tlclZlcnNpb246IHN0cmluZztcbiBcbiAgICAvLyBMaW51eCBLZXJuZWwgdmVyc2lvbiAocHJvdmlkZWQgYnkgdGhlIGRldmljZSkgXG4gICAgcHVibGljIGtlcm5lbFZlcnNpb246IHN0cmluZztcbiBcbiAgICAvLyBUb3RhbCBSQU0gc2l6ZSAoYnl0ZXMpIChwcm92aWRlZCBieSB0aGUgZGV2aWNlKSBcbiAgICBwdWJsaWMgdG90YWxSYW06IG51bWJlcjtcbiBcbiAgICAvLyBEaXNrIGluZm8gYWJvdXQgYWxsIHRoZSBkaXNrcyBpbnN0YWxsZWQgKHByb3ZpZGVkIGJ5IHRoZSBkZXZpY2UpIFxuICAgIHB1YmxpYyBkaXNrczogRGlza0luZm9bXTtcbiBcbiAgICAvLyBDb21tYW5kIGludGVydmFsIGluIHNlY29uZHM6IGhvdyBvZnRlbiB0byBwdWxsIGZvciBjb21tYW5kcyAocHJvdmlkZWQgYnkgdGhlIHN5c3RlbSk8YnI+IFRoZSBkZXZpY2Ugc2hhbGwgcHJvdmlkZSBhIGRlZmF1bHQgdmFsdWUgb2YgMTAsIHRoZSBzeXN0ZW0gbWlnaHQgcHJvdmlkZSBkaWZmZXJlbnQgdmFsdWUgXG4gICAgcHVibGljIGNvbW1hbmRJbnRlcnZhbDogbnVtYmVyO1xuIFxuICAgIC8vIFN0YXR1cyBpbnRlcnZhbCBpbiBzZWNvbmRzOiBob3cgb2Z0ZW4gdG8gc2VuZCBzdGF0dXMgaW5mbyAocHJvdmlkZWQgYnkgdGhlIHN5c3RlbSk8YnI+IFRoZSBkZXZpY2Ugc2hhbGwgcHJvdmlkZSBhIGRlZmF1bHQgdmFsdWUgb2YgMTIwIHNlY29uZHMsIHRoZSBzeXN0ZW0gbWlnaHQgcHJvdmlkZSBkaWZmZXJlbnQgdmFsdWUgXG4gICAgcHVibGljIHN0YXR1c0ludGVydmFsOiBudW1iZXI7XG4gXG4gICAgLy8gRG9ja2VyIHJlcG9zaXRvcnkgY3JlZGVudGlhbHMgKHByb3ZpZGVkIGJ5IHRoZSBzeXN0ZW0pPGJyPiBcbiAgICBwdWJsaWMgZG9ja2VyQ3JlZGVudGlhbHM6IERvY2tlckNyZWRlbnRpYWxzO1xuIFxuICAgIC8vIFNXIENvbXBvbmVudHMgY29uZmlndXJhdGlvbiB2ZXJzaW9uIChwcm92aWRlZCBieSB0aGUgc3lzdGVtKTxicj4gVGhpcyBzdHJ1Y3R1cmUgZGVzY3JpYmVzIHRoZSBTVyBjb21wb25lbnRzIHZlcnNpb24gdG8gYmUgZGVwbG95ZWQgaW4gdGhlIGRldmljZSBcbiAgICBwdWJsaWMgY29uZmlndXJhdGlvblZlcnNpb246IENvbmZpZ3VyYXRpb25WZXJzaW9uO1xuIFxuICAgIC8vIENvbmZpZ3VyYXRpb24gcHJvZmlsZSBJZCBcbiAgICBwdWJsaWMgcHJvZmlsZUlkOiBzdHJpbmc7XG4gXG4gICAgY29uc3RydWN0b3IocHJvZHVjdFR5cGU/OiBQcm9kdWN0VHlwZUNvZGUsIHNlcmlhbE51bWJlcj86IHN0cmluZywgZGV2aWNlTW9kZWw/OiBzdHJpbmcsIGNwdU1vZGVsPzogc3RyaW5nLCB1dWlkPzogc3RyaW5nLCBpcD86IHN0cmluZywgaG9zdD86IHN0cmluZywgZG9ja2VyVmVyc2lvbj86IHN0cmluZywga2VybmVsVmVyc2lvbj86IHN0cmluZywgdG90YWxSYW0/OiBudW1iZXIsIGRpc2tzPzogRGlza0luZm9bXSwgY29tbWFuZEludGVydmFsPzogbnVtYmVyLCBzdGF0dXNJbnRlcnZhbD86IG51bWJlciwgZG9ja2VyQ3JlZGVudGlhbHM/OiBEb2NrZXJDcmVkZW50aWFscywgY29uZmlndXJhdGlvblZlcnNpb24/OiBDb25maWd1cmF0aW9uVmVyc2lvbiwgcHJvZmlsZUlkPzogc3RyaW5nKSB7IFxuICAgICAgICB0aGlzLnByb2R1Y3RUeXBlID0gcHJvZHVjdFR5cGU7XG4gICAgICAgIHRoaXMuc2VyaWFsTnVtYmVyID0gc2VyaWFsTnVtYmVyO1xuICAgICAgICB0aGlzLmRldmljZU1vZGVsID0gZGV2aWNlTW9kZWw7XG4gICAgICAgIHRoaXMuY3B1TW9kZWwgPSBjcHVNb2RlbDtcbiAgICAgICAgdGhpcy51dWlkID0gdXVpZDtcbiAgICAgICAgdGhpcy5pcCA9IGlwO1xuICAgICAgICB0aGlzLmhvc3QgPSBob3N0O1xuICAgICAgICB0aGlzLmRvY2tlclZlcnNpb24gPSBkb2NrZXJWZXJzaW9uO1xuICAgICAgICB0aGlzLmtlcm5lbFZlcnNpb24gPSBrZXJuZWxWZXJzaW9uO1xuICAgICAgICB0aGlzLnRvdGFsUmFtID0gdG90YWxSYW07XG4gICAgICAgIHRoaXMuZGlza3MgPSBkaXNrcztcbiAgICAgICAgdGhpcy5jb21tYW5kSW50ZXJ2YWwgPSBjb21tYW5kSW50ZXJ2YWw7XG4gICAgICAgIHRoaXMuc3RhdHVzSW50ZXJ2YWwgPSBzdGF0dXNJbnRlcnZhbDtcbiAgICAgICAgdGhpcy5kb2NrZXJDcmVkZW50aWFscyA9IGRvY2tlckNyZWRlbnRpYWxzO1xuICAgICAgICB0aGlzLmNvbmZpZ3VyYXRpb25WZXJzaW9uID0gY29uZmlndXJhdGlvblZlcnNpb247XG4gICAgICAgIHRoaXMucHJvZmlsZUlkID0gcHJvZmlsZUlkO1xuICAgIH1cblxufVxuXG5cbiJdfQ==