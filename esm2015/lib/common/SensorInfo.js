/*
   Sensor configuration info
*/
export class SensorInfo {
    constructor(name, type, streamType, imageResolution, recording, metadata, anomalyDetection, alarmInterval, maxBBoxPerFrame, maxFrameRate, streamUri, geoLocation, azimuth, fovAttributes, externalId, tags, debugInfo, viewType) {
        this.name = name;
        this.type = type;
        this.streamType = streamType;
        this.imageResolution = imageResolution;
        this.recording = recording;
        this.metadata = metadata;
        this.anomalyDetection = anomalyDetection;
        this.alarmInterval = alarmInterval;
        this.maxBBoxPerFrame = maxBBoxPerFrame;
        this.maxFrameRate = maxFrameRate;
        this.streamUri = streamUri;
        this.geoLocation = geoLocation;
        this.azimuth = azimuth;
        this.fovAttributes = fovAttributes;
        this.externalId = externalId;
        this.tags = tags;
        this.debugInfo = debugInfo;
        this.viewType = viewType;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2Vuc29ySW5mby5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25nLWNvcmUtbGliL3NyYy9saWIvY29tbW9uL1NlbnNvckluZm8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBU0E7O0VBRUU7QUFDRixNQUFNLE9BQU8sVUFBVTtJQXdEbkIsWUFBWSxJQUFhLEVBQUUsSUFBcUIsRUFBRSxVQUEyQixFQUFFLGVBQXNDLEVBQUUsU0FBbUIsRUFBRSxRQUFrQixFQUFFLGdCQUEwQixFQUFFLGFBQXNCLEVBQUUsZUFBd0IsRUFBRSxZQUFxQixFQUFFLFNBQWtCLEVBQUUsV0FBd0IsRUFBRSxPQUFnQixFQUFFLGFBQWdDLEVBQUUsVUFBbUIsRUFBRSxJQUF1QixFQUFFLFNBQTJCLEVBQUUsUUFBdUI7UUFDcmMsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLFVBQVUsR0FBRyxVQUFVLENBQUM7UUFDN0IsSUFBSSxDQUFDLGVBQWUsR0FBRyxlQUFlLENBQUM7UUFDdkMsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7UUFDM0IsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDekIsSUFBSSxDQUFDLGdCQUFnQixHQUFHLGdCQUFnQixDQUFDO1FBQ3pDLElBQUksQ0FBQyxhQUFhLEdBQUcsYUFBYSxDQUFDO1FBQ25DLElBQUksQ0FBQyxlQUFlLEdBQUcsZUFBZSxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxZQUFZLEdBQUcsWUFBWSxDQUFDO1FBQ2pDLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO1FBQzNCLElBQUksQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFDO1FBQy9CLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxhQUFhLEdBQUcsYUFBYSxDQUFDO1FBQ25DLElBQUksQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDO1FBQzdCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO1FBQzNCLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO0lBQzdCLENBQUM7Q0FFSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZvdkdlb0F0dHJpYnV0ZXMgfSBmcm9tICcuLi9jb21tb24vRm92R2VvQXR0cmlidXRlcyc7XG5pbXBvcnQgeyBTdHJpbmdLZXlWYWx1ZSB9IGZyb20gJy4uL2NvbW1vbi9TdHJpbmdLZXlWYWx1ZSc7XG5pbXBvcnQgeyBTZW5zb3JEZWJ1Z0luZm8gfSBmcm9tICcuLi9jb21tb24vU2Vuc29yRGVidWdJbmZvJztcbmltcG9ydCB7IFZpZXdUeXBlQ29kZSB9IGZyb20gJy4uL2VudW1zL1ZpZXdUeXBlQ29kZSc7XG5pbXBvcnQgeyBTZW5zb3JUeXBlQ29kZSB9IGZyb20gJy4uL2VudW1zL1NlbnNvclR5cGVDb2RlJztcbmltcG9ydCB7IFN0cmVhbVR5cGVDb2RlIH0gZnJvbSAnLi4vZW51bXMvU3RyZWFtVHlwZUNvZGUnO1xuaW1wb3J0IHsgU2Vuc29yUmVzb2x1dGlvbkNvZGUgfSBmcm9tICcuLi9lbnVtcy9TZW5zb3JSZXNvbHV0aW9uQ29kZSc7XG5pbXBvcnQgeyBDb29yZGluYXRlIH0gZnJvbSAnLi4vY29tbW9uL0Nvb3JkaW5hdGUnO1xuXG4vKiBcbiAgIFNlbnNvciBjb25maWd1cmF0aW9uIGluZm8gXG4qL1xuZXhwb3J0IGNsYXNzIFNlbnNvckluZm8ge1xuIFxuICAgIC8vIFNlbnNvciBuYW1lIFxuICAgIHB1YmxpYyBuYW1lOiBzdHJpbmc7XG4gXG4gICAgLy8gU2Vuc29yIHR5cGU6IENDRCB8IFRIRVJNQUwgXG4gICAgcHVibGljIHR5cGU6IFNlbnNvclR5cGVDb2RlO1xuIFxuICAgIC8vIFNlbnNvciB2aWRlbyBzdHJlYW0gdHlwZTogVU5ERUZJTkVEIHwgUlRTUCB8IE9OVklGIHwgQ0xJUCB8IFJUUCB8IE1VTFRJQ0FTVCBcbiAgICBwdWJsaWMgc3RyZWFtVHlwZTogU3RyZWFtVHlwZUNvZGU7XG4gXG4gICAgLy8gU2Vuc29yIHJlc29sdXRpb24gKGltYWdlIHF1YWxpdHkpOiBMT1cgKDApIHwgTUVESVVNICgxKSB8IEhJR0ggKDIpIFxuICAgIHB1YmxpYyBpbWFnZVJlc29sdXRpb246IFNlbnNvclJlc29sdXRpb25Db2RlO1xuIFxuICAgIC8vIEZsYWcgdG8gaW5kaWNhdGUgaWYgc2Vuc29yIGlzIHJlY29yZGluZyB2aWRlbyBcbiAgICBwdWJsaWMgcmVjb3JkaW5nOiBib29sZWFuO1xuIFxuICAgIC8vIEZsYWcgdG8gaW5kaWNhdGUgaWYgc2Vuc29yIHNob3VsZCBzZW5kIG1ldGFkYXRhIFxuICAgIHB1YmxpYyBtZXRhZGF0YTogYm9vbGVhbjtcbiBcbiAgICAvLyBGbGFnIHRvIGluZGljYXRlIGlmIGFub21hbHkgZGV0ZWN0aW9uIGlzIGVuYWJsZWQgZm9yIHRoaXMgc2Vuc29yIFxuICAgIHB1YmxpYyBhbm9tYWx5RGV0ZWN0aW9uOiBib29sZWFuO1xuIFxuICAgIC8vIE1pbmltYWwgdGltZSBpbnRlcnZhbCBiZXR3ZWVuIGFsYXJtcyAoaW4gc2Vjb25kcykgLSAwIGZvciBubyBpbnRlcnZhbCBcbiAgICBwdWJsaWMgYWxhcm1JbnRlcnZhbDogbnVtYmVyO1xuIFxuICAgIC8vIE1heCBudW1iZXIgb2YgYm91bmRpbmcgYm94IHBlciBmcmFtZSBcbiAgICBwdWJsaWMgbWF4QkJveFBlckZyYW1lOiBudW1iZXI7XG4gXG4gICAgLy8gTWF4IGZyYW1lIHJhdGUgXG4gICAgcHVibGljIG1heEZyYW1lUmF0ZTogbnVtYmVyO1xuIFxuICAgIC8vIFZpZGVvIHN0cmVhbSBzb3VyY2UgVVJJIFxuICAgIHB1YmxpYyBzdHJlYW1Vcmk6IHN0cmluZztcbiBcbiAgICAvLyBTZW5zb3IgZ2VvIGxvY2F0aW9uIChXR1MtODQgY29vcmRpbmF0ZSBzeXN0ZW0pIFxuICAgIHB1YmxpYyBnZW9Mb2NhdGlvbjogQ29vcmRpbmF0ZTtcbiBcbiAgICAvLyBTZW5zb3IgRk9WIGF6aW11dGggKDAgLSAzNTkpIFxuICAgIHB1YmxpYyBhemltdXRoOiBudW1iZXI7XG4gXG4gICAgLy8gRmllbGQgb2YgVmlldyBHZW8gYXR0cmlidXRlcyAodXNlZCBmb3IgRk9WIHRvIFdHUy04NCB0cmFuc2Zvcm1hdGlvbnMpIFxuICAgIHB1YmxpYyBmb3ZBdHRyaWJ1dGVzOiBGb3ZHZW9BdHRyaWJ1dGVzO1xuIFxuICAgIC8vIEV4dGVybmFsIGlkIChjYW1lcmEgaWQgaW4gZXh0ZXJuYWwgc3lzdGVtKSBcbiAgICBwdWJsaWMgZXh0ZXJuYWxJZDogc3RyaW5nO1xuIFxuICAgIC8vIFVzZXIgZGVmaW5lZCB0YWdzIChsaXN0IG9mIGtleS12YWx1ZSBwYWlycykgXG4gICAgcHVibGljIHRhZ3M6IFN0cmluZ0tleVZhbHVlW107XG4gXG4gICAgLy8gU2Vuc29yIGRlYnVnIGluZm9ybWF0aW9uIGZsYWdzIFxuICAgIHB1YmxpYyBkZWJ1Z0luZm86IFNlbnNvckRlYnVnSW5mbztcbiBcbiAgICAvLyBWaWV3IHR5cGU6IE5PUk1BTCB8IEZJU0hFWUVfT1ZFUkhFQUQgXG4gICAgcHVibGljIHZpZXdUeXBlOiBWaWV3VHlwZUNvZGU7XG4gXG4gICAgY29uc3RydWN0b3IobmFtZT86IHN0cmluZywgdHlwZT86IFNlbnNvclR5cGVDb2RlLCBzdHJlYW1UeXBlPzogU3RyZWFtVHlwZUNvZGUsIGltYWdlUmVzb2x1dGlvbj86IFNlbnNvclJlc29sdXRpb25Db2RlLCByZWNvcmRpbmc/OiBib29sZWFuLCBtZXRhZGF0YT86IGJvb2xlYW4sIGFub21hbHlEZXRlY3Rpb24/OiBib29sZWFuLCBhbGFybUludGVydmFsPzogbnVtYmVyLCBtYXhCQm94UGVyRnJhbWU/OiBudW1iZXIsIG1heEZyYW1lUmF0ZT86IG51bWJlciwgc3RyZWFtVXJpPzogc3RyaW5nLCBnZW9Mb2NhdGlvbj86IENvb3JkaW5hdGUsIGF6aW11dGg/OiBudW1iZXIsIGZvdkF0dHJpYnV0ZXM/OiBGb3ZHZW9BdHRyaWJ1dGVzLCBleHRlcm5hbElkPzogc3RyaW5nLCB0YWdzPzogU3RyaW5nS2V5VmFsdWVbXSwgZGVidWdJbmZvPzogU2Vuc29yRGVidWdJbmZvLCB2aWV3VHlwZT86IFZpZXdUeXBlQ29kZSkgeyBcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy50eXBlID0gdHlwZTtcbiAgICAgICAgdGhpcy5zdHJlYW1UeXBlID0gc3RyZWFtVHlwZTtcbiAgICAgICAgdGhpcy5pbWFnZVJlc29sdXRpb24gPSBpbWFnZVJlc29sdXRpb247XG4gICAgICAgIHRoaXMucmVjb3JkaW5nID0gcmVjb3JkaW5nO1xuICAgICAgICB0aGlzLm1ldGFkYXRhID0gbWV0YWRhdGE7XG4gICAgICAgIHRoaXMuYW5vbWFseURldGVjdGlvbiA9IGFub21hbHlEZXRlY3Rpb247XG4gICAgICAgIHRoaXMuYWxhcm1JbnRlcnZhbCA9IGFsYXJtSW50ZXJ2YWw7XG4gICAgICAgIHRoaXMubWF4QkJveFBlckZyYW1lID0gbWF4QkJveFBlckZyYW1lO1xuICAgICAgICB0aGlzLm1heEZyYW1lUmF0ZSA9IG1heEZyYW1lUmF0ZTtcbiAgICAgICAgdGhpcy5zdHJlYW1VcmkgPSBzdHJlYW1Vcmk7XG4gICAgICAgIHRoaXMuZ2VvTG9jYXRpb24gPSBnZW9Mb2NhdGlvbjtcbiAgICAgICAgdGhpcy5hemltdXRoID0gYXppbXV0aDtcbiAgICAgICAgdGhpcy5mb3ZBdHRyaWJ1dGVzID0gZm92QXR0cmlidXRlcztcbiAgICAgICAgdGhpcy5leHRlcm5hbElkID0gZXh0ZXJuYWxJZDtcbiAgICAgICAgdGhpcy50YWdzID0gdGFncztcbiAgICAgICAgdGhpcy5kZWJ1Z0luZm8gPSBkZWJ1Z0luZm87XG4gICAgICAgIHRoaXMudmlld1R5cGUgPSB2aWV3VHlwZTtcbiAgICB9XG5cbn1cblxuXG4iXX0=