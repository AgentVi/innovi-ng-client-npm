/*
   Sensor configuration info
*/
export class SensorInfo {
    constructor(name, type, streamType, imageResolution, recording, metadata, anomalyDetection, alarmInterval, maxBBoxPerFrame, maxFrameRate, streamUri, geoLocation, azimuth, fovAttributes, externalId, tags, debugInfo) {
        this.name = name;
        this.type = type;
        this.streamType = streamType;
        this.imageResolution = imageResolution;
        this.recording = recording;
        this.metadata = metadata;
        this.anomalyDetection = anomalyDetection;
        this.alarmInterval = alarmInterval;
        this.maxBBoxPerFrame = maxBBoxPerFrame;
        this.maxFrameRate = maxFrameRate;
        this.streamUri = streamUri;
        this.geoLocation = geoLocation;
        this.azimuth = azimuth;
        this.fovAttributes = fovAttributes;
        this.externalId = externalId;
        this.tags = tags;
        this.debugInfo = debugInfo;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2Vuc29ySW5mby5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhZ2VudHZpL25nLWNvcmUtbGliLyIsInNvdXJjZXMiOlsibGliL2NvbW1vbi9TZW5zb3JJbmZvLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVFBOztFQUVFO0FBQ0YsTUFBTSxPQUFPLFVBQVU7SUFxRG5CLFlBQVksSUFBYSxFQUFFLElBQXFCLEVBQUUsVUFBMkIsRUFBRSxlQUFzQyxFQUFFLFNBQW1CLEVBQUUsUUFBa0IsRUFBRSxnQkFBMEIsRUFBRSxhQUFzQixFQUFFLGVBQXdCLEVBQUUsWUFBcUIsRUFBRSxTQUFrQixFQUFFLFdBQXdCLEVBQUUsT0FBZ0IsRUFBRSxhQUFnQyxFQUFFLFVBQW1CLEVBQUUsSUFBdUIsRUFBRSxTQUEyQjtRQUM1YSxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFJLENBQUMsVUFBVSxHQUFHLFVBQVUsQ0FBQztRQUM3QixJQUFJLENBQUMsZUFBZSxHQUFHLGVBQWUsQ0FBQztRQUN2QyxJQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztRQUMzQixJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztRQUN6QixJQUFJLENBQUMsZ0JBQWdCLEdBQUcsZ0JBQWdCLENBQUM7UUFDekMsSUFBSSxDQUFDLGFBQWEsR0FBRyxhQUFhLENBQUM7UUFDbkMsSUFBSSxDQUFDLGVBQWUsR0FBRyxlQUFlLENBQUM7UUFDdkMsSUFBSSxDQUFDLFlBQVksR0FBRyxZQUFZLENBQUM7UUFDakMsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7UUFDM0IsSUFBSSxDQUFDLFdBQVcsR0FBRyxXQUFXLENBQUM7UUFDL0IsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDdkIsSUFBSSxDQUFDLGFBQWEsR0FBRyxhQUFhLENBQUM7UUFDbkMsSUFBSSxDQUFDLFVBQVUsR0FBRyxVQUFVLENBQUM7UUFDN0IsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7SUFDL0IsQ0FBQztDQUVKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3RyaW5nS2V5VmFsdWUgfSBmcm9tICcuLi9jb21tb24vU3RyaW5nS2V5VmFsdWUnO1xuaW1wb3J0IHsgU2Vuc29yRGVidWdJbmZvIH0gZnJvbSAnLi4vY29tbW9uL1NlbnNvckRlYnVnSW5mbyc7XG5pbXBvcnQgeyBTZW5zb3JUeXBlQ29kZSB9IGZyb20gJy4uL2VudW1zL1NlbnNvclR5cGVDb2RlJztcbmltcG9ydCB7IFN0cmVhbVR5cGVDb2RlIH0gZnJvbSAnLi4vZW51bXMvU3RyZWFtVHlwZUNvZGUnO1xuaW1wb3J0IHsgU2Vuc29yUmVzb2x1dGlvbkNvZGUgfSBmcm9tICcuLi9lbnVtcy9TZW5zb3JSZXNvbHV0aW9uQ29kZSc7XG5pbXBvcnQgeyBDb29yZGluYXRlIH0gZnJvbSAnLi4vY29tbW9uL0Nvb3JkaW5hdGUnO1xuaW1wb3J0IHsgRm92R2VvQXR0cmlidXRlcyB9IGZyb20gJy4uL2NvbW1vbi9Gb3ZHZW9BdHRyaWJ1dGVzJztcblxuLyogXG4gICBTZW5zb3IgY29uZmlndXJhdGlvbiBpbmZvIFxuKi9cbmV4cG9ydCBjbGFzcyBTZW5zb3JJbmZvIHtcbiBcbiAgICAvLyBTZW5zb3IgbmFtZSBcbiAgICBwdWJsaWMgbmFtZTogc3RyaW5nO1xuIFxuICAgIC8vIFNlbnNvciB0eXBlOiBDQ0QgfCBUSEVSTUFMIFxuICAgIHB1YmxpYyB0eXBlOiBTZW5zb3JUeXBlQ29kZTtcbiBcbiAgICAvLyBTZW5zb3IgdmlkZW8gc3RyZWFtIHR5cGU6IFVOREVGSU5FRCB8IFJUU1AgfCBPTlZJRiB8IENMSVAgfCBSVFAgfCBNVUxUSUNBU1QgXG4gICAgcHVibGljIHN0cmVhbVR5cGU6IFN0cmVhbVR5cGVDb2RlO1xuIFxuICAgIC8vIFNlbnNvciByZXNvbHV0aW9uIChpbWFnZSBxdWFsaXR5KTogTE9XICgwKSB8IE1FRElVTSAoMSkgfCBISUdIICgyKSBcbiAgICBwdWJsaWMgaW1hZ2VSZXNvbHV0aW9uOiBTZW5zb3JSZXNvbHV0aW9uQ29kZTtcbiBcbiAgICAvLyBGbGFnIHRvIGluZGljYXRlIGlmIHNlbnNvciBpcyByZWNvcmRpbmcgdmlkZW8gXG4gICAgcHVibGljIHJlY29yZGluZzogYm9vbGVhbjtcbiBcbiAgICAvLyBGbGFnIHRvIGluZGljYXRlIGlmIHNlbnNvciBzaG91bGQgc2VuZCBtZXRhZGF0YSBcbiAgICBwdWJsaWMgbWV0YWRhdGE6IGJvb2xlYW47XG4gXG4gICAgLy8gRmxhZyB0byBpbmRpY2F0ZSBpZiBhbm9tYWx5IGRldGVjdGlvbiBpcyBlbmFibGVkIGZvciB0aGlzIHNlbnNvciBcbiAgICBwdWJsaWMgYW5vbWFseURldGVjdGlvbjogYm9vbGVhbjtcbiBcbiAgICAvLyBNaW5pbWFsIHRpbWUgaW50ZXJ2YWwgYmV0d2VlbiBhbGFybXMgKGluIHNlY29uZHMpIC0gMCBmb3Igbm8gaW50ZXJ2YWwgXG4gICAgcHVibGljIGFsYXJtSW50ZXJ2YWw6IG51bWJlcjtcbiBcbiAgICAvLyBNYXggbnVtYmVyIG9mIGJvdW5kaW5nIGJveCBwZXIgZnJhbWUgXG4gICAgcHVibGljIG1heEJCb3hQZXJGcmFtZTogbnVtYmVyO1xuIFxuICAgIC8vIE1heCBmcmFtZSByYXRlIFxuICAgIHB1YmxpYyBtYXhGcmFtZVJhdGU6IG51bWJlcjtcbiBcbiAgICAvLyBWaWRlbyBzdHJlYW0gc291cmNlIFVSSSBcbiAgICBwdWJsaWMgc3RyZWFtVXJpOiBzdHJpbmc7XG4gXG4gICAgLy8gU2Vuc29yIGdlbyBsb2NhdGlvbiAoV0dTLTg0IGNvb3JkaW5hdGUgc3lzdGVtKSBcbiAgICBwdWJsaWMgZ2VvTG9jYXRpb246IENvb3JkaW5hdGU7XG4gXG4gICAgLy8gU2Vuc29yIEZPViBhemltdXRoICgwIC0gMzU5KSBcbiAgICBwdWJsaWMgYXppbXV0aDogbnVtYmVyO1xuIFxuICAgIC8vIEZpZWxkIG9mIFZpZXcgR2VvIGF0dHJpYnV0ZXMgKHVzZWQgZm9yIEZPViB0byBXR1MtODQgdHJhbnNmb3JtYXRpb25zKSBcbiAgICBwdWJsaWMgZm92QXR0cmlidXRlczogRm92R2VvQXR0cmlidXRlcztcbiBcbiAgICAvLyBFeHRlcm5hbCBpZCAoY2FtZXJhIGlkIGluIGV4dGVybmFsIHN5c3RlbSkgXG4gICAgcHVibGljIGV4dGVybmFsSWQ6IHN0cmluZztcbiBcbiAgICAvLyBVc2VyIGRlZmluZWQgdGFncyAobGlzdCBvZiBrZXktdmFsdWUgcGFpcnMpIFxuICAgIHB1YmxpYyB0YWdzOiBTdHJpbmdLZXlWYWx1ZVtdO1xuIFxuICAgIC8vIFNlbnNvciBkZWJ1ZyBpbmZvcm1hdGlvbiBmbGFncyBcbiAgICBwdWJsaWMgZGVidWdJbmZvOiBTZW5zb3JEZWJ1Z0luZm87XG4gXG4gICAgY29uc3RydWN0b3IobmFtZT86IHN0cmluZywgdHlwZT86IFNlbnNvclR5cGVDb2RlLCBzdHJlYW1UeXBlPzogU3RyZWFtVHlwZUNvZGUsIGltYWdlUmVzb2x1dGlvbj86IFNlbnNvclJlc29sdXRpb25Db2RlLCByZWNvcmRpbmc/OiBib29sZWFuLCBtZXRhZGF0YT86IGJvb2xlYW4sIGFub21hbHlEZXRlY3Rpb24/OiBib29sZWFuLCBhbGFybUludGVydmFsPzogbnVtYmVyLCBtYXhCQm94UGVyRnJhbWU/OiBudW1iZXIsIG1heEZyYW1lUmF0ZT86IG51bWJlciwgc3RyZWFtVXJpPzogc3RyaW5nLCBnZW9Mb2NhdGlvbj86IENvb3JkaW5hdGUsIGF6aW11dGg/OiBudW1iZXIsIGZvdkF0dHJpYnV0ZXM/OiBGb3ZHZW9BdHRyaWJ1dGVzLCBleHRlcm5hbElkPzogc3RyaW5nLCB0YWdzPzogU3RyaW5nS2V5VmFsdWVbXSwgZGVidWdJbmZvPzogU2Vuc29yRGVidWdJbmZvKSB7IFxuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICB0aGlzLnR5cGUgPSB0eXBlO1xuICAgICAgICB0aGlzLnN0cmVhbVR5cGUgPSBzdHJlYW1UeXBlO1xuICAgICAgICB0aGlzLmltYWdlUmVzb2x1dGlvbiA9IGltYWdlUmVzb2x1dGlvbjtcbiAgICAgICAgdGhpcy5yZWNvcmRpbmcgPSByZWNvcmRpbmc7XG4gICAgICAgIHRoaXMubWV0YWRhdGEgPSBtZXRhZGF0YTtcbiAgICAgICAgdGhpcy5hbm9tYWx5RGV0ZWN0aW9uID0gYW5vbWFseURldGVjdGlvbjtcbiAgICAgICAgdGhpcy5hbGFybUludGVydmFsID0gYWxhcm1JbnRlcnZhbDtcbiAgICAgICAgdGhpcy5tYXhCQm94UGVyRnJhbWUgPSBtYXhCQm94UGVyRnJhbWU7XG4gICAgICAgIHRoaXMubWF4RnJhbWVSYXRlID0gbWF4RnJhbWVSYXRlO1xuICAgICAgICB0aGlzLnN0cmVhbVVyaSA9IHN0cmVhbVVyaTtcbiAgICAgICAgdGhpcy5nZW9Mb2NhdGlvbiA9IGdlb0xvY2F0aW9uO1xuICAgICAgICB0aGlzLmF6aW11dGggPSBhemltdXRoO1xuICAgICAgICB0aGlzLmZvdkF0dHJpYnV0ZXMgPSBmb3ZBdHRyaWJ1dGVzO1xuICAgICAgICB0aGlzLmV4dGVybmFsSWQgPSBleHRlcm5hbElkO1xuICAgICAgICB0aGlzLnRhZ3MgPSB0YWdzO1xuICAgICAgICB0aGlzLmRlYnVnSW5mbyA9IGRlYnVnSW5mbztcbiAgICB9XG5cbn1cblxuXG4iXX0=