import { BaseEntity } from '../entities/BaseEntity';
/*
   User type
*/
export class User extends BaseEntity {
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVXNlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25nLWNvcmUtbGliL3NyYy9saWIvZW50aXRpZXMvVXNlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFFcEQ7O0VBRUU7QUFDRixNQUFNLE9BQU8sSUFBSyxTQUFRLFVBQVU7Q0FrRW5DIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVXNlclR5cGVDb2RlIH0gZnJvbSAnLi4vZW51bXMvVXNlclR5cGVDb2RlJztcbmltcG9ydCB7IFVzZXJTdGF0dXNDb2RlIH0gZnJvbSAnLi4vZW51bXMvVXNlclN0YXR1c0NvZGUnO1xuaW1wb3J0IHsgQWNjb3VudFJvbGUgfSBmcm9tICcuLi9jb21tb24vQWNjb3VudFJvbGUnO1xuaW1wb3J0IHsgQmFzZUVudGl0eSB9IGZyb20gJy4uL2VudGl0aWVzL0Jhc2VFbnRpdHknO1xuXG4vKiBcbiAgIFVzZXIgdHlwZSBcbiovXG5leHBvcnQgY2xhc3MgVXNlciBleHRlbmRzIEJhc2VFbnRpdHkge1xuIFxuICAgIC8vIFVzZXIgbmFtZSBcbiAgICBwdWJsaWMgbmFtZTogc3RyaW5nO1xuIFxuICAgIC8vIFVzZXIgZW1haWwgXG4gICAgcHVibGljIGVtYWlsOiBzdHJpbmc7XG4gXG4gICAgLy8gVXNlciBtb2JpbGUgcGhvbmUgbnVtYmVyIChmb3Igbm90aWZpY2F0aW9uIGFuZCB2YWxpZGF0aW9uKSBcbiAgICBwdWJsaWMgbW9iaWxlOiBzdHJpbmc7XG4gXG4gICAgLy8gUGFzc3dvcmQgc2FsdCBcbiAgICBwdWJsaWMgc2FsdDogc3RyaW5nO1xuIFxuICAgIC8vIFBhc3N3b3JkIGhhc2ggXG4gICAgcHVibGljIGhhc2g6IHN0cmluZztcbiBcbiAgICAvLyBVc2VyIHR5cGU6IFVOREVGSU5FRCB8IFNZU0FETUlOIHwgU1VQUE9SVCB8IFVTRVIgXG4gICAgcHVibGljIHR5cGU6IFVzZXJUeXBlQ29kZTtcbiBcbiAgICAvLyBVc2VyIHN0YXR1czogVU5ERUZJTkVEIHwgUEVORElORyB8IEFDVElWRSB8IEJMT0NLRUQgfCBTVVNQRU5ERUQgXG4gICAgcHVibGljIHN0YXR1czogVXNlclN0YXR1c0NvZGU7XG4gXG4gICAgLy8gV2hlbiB1c2VyIHdhcyBsYXN0IHN1c3BlbmRlZCBbRXBvY2ggbWlsbGlzZWNvbmRzIFRpbWVzdGFtcF0gXG4gICAgcHVibGljIHN1c3BlbmRlZE9uOiBudW1iZXI7XG4gXG4gICAgLy8gTnVtYmVyIG9mIFNpZ24taW4gQXR0ZW1wdHMgXG4gICAgcHVibGljIHNpZ25JbkF0dGVtcHRzOiBudW1iZXI7XG4gXG4gICAgLy8gTGFzdCBTaWduLWluIFtFcG9jaCBtaWxsaXNlY29uZHMgVGltZXN0YW1wXSBcbiAgICBwdWJsaWMgbGFzdFNpZ25JbjogbnVtYmVyO1xuIFxuICAgIC8vIExhc3QgRmFpbGVkIFNpZ24taW4gW0Vwb2NoIG1pbGxpc2Vjb25kcyBUaW1lc3RhbXBdIFxuICAgIHB1YmxpYyBsYXN0RmFpbGVkU2lnbkluOiBudW1iZXI7XG4gXG4gICAgLy8gVXNlciBtdXN0IGNoYW5nZSBwYXNzd29yZCBvbiBuZXh0IGxvZ2luIFxuICAgIHB1YmxpYyBjaGFuZ2VQYXNzd29yZDogYm9vbGVhbjtcbiBcbiAgICAvLyBXaGVuIHVzZXIgY3JlYXRlZCBoaXMgcGFzc3dvcmQgW0Vwb2NoIG1pbGxpc2Vjb25kcyBUaW1lc3RhbXBdIFxuICAgIHB1YmxpYyBwYXNzd29yZENoYW5nZWRPbjogbnVtYmVyO1xuIFxuICAgIC8vIExpc3Qgb2YgYWNjb3VudHMgYW5kIHJvbGVzIHRoZSB1c2VyIGhhcyBhY2Nlc3MgdG8gXG4gICAgcHVibGljIGFjY291bnRSb2xlczogQWNjb3VudFJvbGVbXTtcbiBcbiAgICAvLyBEZWZhdWx0IGFjY291bnQgSWQgXG4gICAgcHVibGljIGRlZmF1bHRBY2NvdW50OiBzdHJpbmc7XG4gXG4gICAgLy8gVXNlciBkZXNjcmlwdGlvbiBcbiAgICBwdWJsaWMgZGVzY3JpcHRpb246IHN0cmluZztcbiBcbiAgICAvLyBFbnRpdHkgSWQgXG4gICAgcHVibGljIGlkOiBzdHJpbmc7XG4gXG4gICAgLy8gRW50aXR5IGRvY3VtZW50IHR5cGUgKHN5c3RlbSBmaWVsZCkgXG4gICAgcHVibGljIF90eXBlOiBzdHJpbmc7XG4gXG4gICAgLy8gV2hlbiB0aGUgZW50aXR5IHdhcyBjcmVhdGVkIFtFcG9jaCBtaWxsaXNlY29uZHMgVGltZXN0YW1wXSBcbiAgICBwdWJsaWMgY3JlYXRlZE9uOiBudW1iZXI7XG4gXG4gICAgLy8gV2hlbiB0aGUgZW50aXR5IHdhcyB1cGRhdGVkIFtFcG9jaCBtaWxsaXNlY29uZHMgVGltZXN0YW1wXSBcbiAgICBwdWJsaWMgdXBkYXRlZE9uOiBudW1iZXI7XG4gXG4gICAgLy8gRW50aXR5IHBhdGggaW4gdGhlIGhpZXJhcmNoeSBcbiAgICBwdWJsaWMgcGF0aDogc3RyaW5nO1xuIFxuXG59XG5cblxuIl19