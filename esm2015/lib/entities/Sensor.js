import { BaseEntity } from '../entities/BaseEntity';
/*
   Sensor type
*/
export class Sensor extends BaseEntity {
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2Vuc29yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmctY29yZS1saWIvc3JjL2xpYi9lbnRpdGllcy9TZW5zb3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBTUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBS3BEOztFQUVFO0FBQ0YsTUFBTSxPQUFPLE1BQU8sU0FBUSxVQUFVO0NBNEdyQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRocmVzaG9sZHMgfSBmcm9tICcuLi9jb21tb24vVGhyZXNob2xkcyc7XG5pbXBvcnQgeyBTZW5zb3JEZWJ1Z0luZm8gfSBmcm9tICcuLi9jb21tb24vU2Vuc29yRGVidWdJbmZvJztcbmltcG9ydCB7IFNlbnNvclN0YXR1c0NvZGUgfSBmcm9tICcuLi9lbnVtcy9TZW5zb3JTdGF0dXNDb2RlJztcbmltcG9ydCB7IEZvdkdlb0F0dHJpYnV0ZXMgfSBmcm9tICcuLi9jb21tb24vRm92R2VvQXR0cmlidXRlcyc7XG5pbXBvcnQgeyBTdHJpbmdLZXlWYWx1ZSB9IGZyb20gJy4uL2NvbW1vbi9TdHJpbmdLZXlWYWx1ZSc7XG5pbXBvcnQgeyBDb29yZGluYXRlIH0gZnJvbSAnLi4vY29tbW9uL0Nvb3JkaW5hdGUnO1xuaW1wb3J0IHsgQmFzZUVudGl0eSB9IGZyb20gJy4uL2VudGl0aWVzL0Jhc2VFbnRpdHknO1xuaW1wb3J0IHsgU2Vuc29yVHlwZUNvZGUgfSBmcm9tICcuLi9lbnVtcy9TZW5zb3JUeXBlQ29kZSc7XG5pbXBvcnQgeyBTdHJlYW1UeXBlQ29kZSB9IGZyb20gJy4uL2VudW1zL1N0cmVhbVR5cGVDb2RlJztcbmltcG9ydCB7IFNlbnNvclJlc29sdXRpb25Db2RlIH0gZnJvbSAnLi4vZW51bXMvU2Vuc29yUmVzb2x1dGlvbkNvZGUnO1xuXG4vKiBcbiAgIFNlbnNvciB0eXBlIFxuKi9cbmV4cG9ydCBjbGFzcyBTZW5zb3IgZXh0ZW5kcyBCYXNlRW50aXR5IHtcbiBcbiAgICAvLyBBY2NvdW50IElkIFxuICAgIHB1YmxpYyBhY2NvdW50SWQ6IHN0cmluZztcbiBcbiAgICAvLyBGb2xkZXIgSWQgKGVtcHR5IGZvciByb290IGZvbGRlcikgXG4gICAgcHVibGljIGZvbGRlcklkOiBzdHJpbmc7XG4gXG4gICAgLy8gQXBwbGlhbmNlIElkIFxuICAgIHB1YmxpYyBhcHBsaWFuY2VJZDogc3RyaW5nO1xuIFxuICAgIC8vIEFnZW50IElkIChSZWxldmFudCBmb3IgbmV3IHBpcGVsaW5lIG9ubHkpIFxuICAgIHB1YmxpYyBhZ2VudElkOiBzdHJpbmc7XG4gXG4gICAgLy8gU2Vuc29yIG5hbWUgXG4gICAgcHVibGljIG5hbWU6IHN0cmluZztcbiBcbiAgICAvLyBTZW5zb3IgdHlwZTogQ0NEIHwgVEhFUk1BTCBcbiAgICBwdWJsaWMgdHlwZTogU2Vuc29yVHlwZUNvZGU7XG4gXG4gICAgLy8gU2Vuc29yIHN0YXR1czogVU5ERUZJTkVEIHwgQUNUSVZFIHwgV0FSTklORyB8IEVSUk9SIHwgSU5BQ1RJVkUgfCBTVVNQRU5ERUQgfCBQRU5ESU5HIFxuICAgIHB1YmxpYyBzdGF0dXM6IFNlbnNvclN0YXR1c0NvZGU7XG4gXG4gICAgLy8gU2Vuc29yIHJlYWwgdGltZSBzdGF0ZSBiaXQgbWFzayBmbGFncyBcbiAgICBwdWJsaWMgc3RhdGU6IG51bWJlcjtcbiBcbiAgICAvLyBXaGVuIHdhcyB0aGUgbGFzdCBzdGF0ZSByZXBvcnQgdXBkYXRlIFtFcG9jaCBtaWxsaXNlY29uZHMgVGltZXN0YW1wXSBcbiAgICBwdWJsaWMgc3RhdGVSZXBvcnRlZE9uOiBudW1iZXI7XG4gXG4gICAgLy8gU2Vuc29yIHZpZGVvIHN0cmVhbSB0eXBlOiBVTkRFRklORUQgfCBSVFNQIHwgT05WSUYgfCBDTElQIHwgUlRQIHwgTVVMVElDQVNUIFxuICAgIHB1YmxpYyBzdHJlYW1UeXBlOiBTdHJlYW1UeXBlQ29kZTtcbiBcbiAgICAvLyBTZW5zb3IgcmVzb2x1dGlvbiAoaW1hZ2UgcXVhbGl0eSk6IExPVyAoMCkgfCBNRURJVU0gKDEpIHwgSElHSCAoMikgXG4gICAgcHVibGljIGltYWdlUmVzb2x1dGlvbjogU2Vuc29yUmVzb2x1dGlvbkNvZGU7XG4gXG4gICAgLy8gRmxhZyB0byBpbmRpY2F0ZSBpZiBzZW5zb3IgaXMgcmVjb3JkaW5nIHZpZGVvIFxuICAgIHB1YmxpYyByZWNvcmRpbmc6IGJvb2xlYW47XG4gXG4gICAgLy8gRmxhZyB0byBpbmRpY2F0ZSBpZiBzZW5zb3Igc2hvdWxkIHNlbmQgbWV0YWRhdGEgXG4gICAgcHVibGljIG1ldGFkYXRhOiBib29sZWFuO1xuIFxuICAgIC8vIEZsYWcgdG8gaW5kaWNhdGUgaWYgYW5vbWFseSBkZXRlY3Rpb24gaXMgZW5hYmxlZCBmb3IgdGhpcyBzZW5zb3IgXG4gICAgcHVibGljIGFub21hbHlEZXRlY3Rpb246IGJvb2xlYW47XG4gXG4gICAgLy8gRmxhZyB0byBpbmRpY2F0ZSBpZiB1bmF0dGVuZGVkIG9iamVjdCBkZXRlY3Rpb24gbW9kZWwgaXMgZW5hYmxlZCBcbiAgICBwdWJsaWMgdW5hdHRlbmRlZE9iamVjdDogYm9vbGVhbjtcbiBcbiAgICAvLyBNaW5pbWFsIHRpbWUgaW50ZXJ2YWwgYmV0d2VlbiBhbGFybXMgKGluIHNlY29uZHMpIC0gMCBmb3Igbm8gaW50ZXJ2YWwgXG4gICAgcHVibGljIGFsYXJtSW50ZXJ2YWw6IG51bWJlcjtcbiBcbiAgICAvLyBNYXggbnVtYmVyIG9mIGJvdW5kaW5nIGJveCBwZXIgZnJhbWUgXG4gICAgcHVibGljIG1heEJCb3hQZXJGcmFtZTogbnVtYmVyO1xuIFxuICAgIC8vIE1heCBmcmFtZSByYXRlIFxuICAgIHB1YmxpYyBtYXhGcmFtZVJhdGU6IG51bWJlcjtcbiBcbiAgICAvLyBWaWRlbyBzdHJlYW0gc291cmNlIFVSSSwgZm9ybWF0IGFuZCBzY2hlbWVzIGlzIGRlcml2ZWQgZnJvbSB0aGUgc3RyZWFtIHR5cGUsIHNlZSBTdHJlYW1UeXBlQ29kZSkgXG4gICAgcHVibGljIHN0cmVhbVVyaTogc3RyaW5nO1xuIFxuICAgIC8vIFNlbnNvciBnZW8gbG9jYXRpb24gKFdHUy04NCBjb29yZGluYXRlIHN5c3RlbSkgXG4gICAgcHVibGljIGdlb0xvY2F0aW9uOiBDb29yZGluYXRlO1xuIFxuICAgIC8vIFNlbnNvciBGT1YgYXppbXV0aCAoMCAtIDM1OSkgXG4gICAgcHVibGljIGF6aW11dGg6IG51bWJlcjtcbiBcbiAgICAvLyBGaWVsZCBvZiBWaWV3IEdlbyBhdHRyaWJ1dGVzICh1c2VkIGZvciBGT1YgdG8gV0dTLTg0IHRyYW5zZm9ybWF0aW9ucykgXG4gICAgcHVibGljIGZvdkF0dHJpYnV0ZXM6IEZvdkdlb0F0dHJpYnV0ZXM7XG4gXG4gICAgLy8gRXh0ZXJuYWwgaWQgKGNhbWVyYSBpZCBpbiBleHRlcm5hbCBzeXN0ZW0pIFxuICAgIHB1YmxpYyBleHRlcm5hbElkOiBzdHJpbmc7XG4gXG4gICAgLy8gVXNlciBkZWZpbmVkIHRhZ3MgKGxpc3Qgb2Yga2V5LXZhbHVlIHBhaXJzKSBcbiAgICBwdWJsaWMgdGFnczogU3RyaW5nS2V5VmFsdWVbXTtcbiBcbiAgICAvLyBIZWFsdGggbm90aWZpY2F0aW9ucyB0aHJlc2hvbGRzIFxuICAgIHB1YmxpYyBoZWFsdGhUaHJlc2hvbGRzOiBUaHJlc2hvbGRzO1xuIFxuICAgIC8vIFNlbnNvciBkZWJ1ZyBpbmZvcm1hdGlvbiBmbGFncyBcbiAgICBwdWJsaWMgZGVidWdJbmZvOiBTZW5zb3JEZWJ1Z0luZm87XG4gXG4gICAgLy8gRmxhZyB0byBpbmRpY2F0ZSBpZiB0aGUgYWdlbnQgc2hvdWxkIHN5bmMgdGhlIGZyYW1lIHRpbWVzdGFtcHMgZnJvbSB0aGUgUlRTUCBzdHJlYW0gXG4gICAgcHVibGljIHN5bmNUaW1lVG9TdHJlYW06IGJvb2xlYW47XG4gXG4gICAgLy8gU3RyZWFtIGNvZGVjIChpLmUuIGguMjY0LCBoLjI2NSBldGMpIFxuICAgIHB1YmxpYyBjb2RlYzogc3RyaW5nO1xuIFxuICAgIC8vIFN0cmVhbSByZXNvbHV0aW9uIChpLmUuIDEyODB4NzIwLCAxOTIweDEwODAgZXRjKSBcbiAgICBwdWJsaWMgcmVzb2x1dGlvbjogc3RyaW5nO1xuIFxuICAgIC8vIFN0cmVhbSBmcmFtZXJhdGUgKGZyYW1lcyBwZXIgc2Vjb25kKSBcbiAgICBwdWJsaWMgZnJhbWVyYXRlOiBudW1iZXI7XG4gXG4gICAgLy8gRW50aXR5IElkIFxuICAgIHB1YmxpYyBpZDogc3RyaW5nO1xuIFxuICAgIC8vIEVudGl0eSBkb2N1bWVudCB0eXBlIChzeXN0ZW0gZmllbGQpIFxuICAgIHB1YmxpYyBfdHlwZTogc3RyaW5nO1xuIFxuICAgIC8vIFdoZW4gdGhlIGVudGl0eSB3YXMgY3JlYXRlZCBbRXBvY2ggbWlsbGlzZWNvbmRzIFRpbWVzdGFtcF0gXG4gICAgcHVibGljIGNyZWF0ZWRPbjogbnVtYmVyO1xuIFxuICAgIC8vIFdoZW4gdGhlIGVudGl0eSB3YXMgdXBkYXRlZCBbRXBvY2ggbWlsbGlzZWNvbmRzIFRpbWVzdGFtcF0gXG4gICAgcHVibGljIHVwZGF0ZWRPbjogbnVtYmVyO1xuIFxuICAgIC8vIEVudGl0eSBwYXRoIGluIHRoZSBoaWVyYXJjaHkgXG4gICAgcHVibGljIHBhdGg6IHN0cmluZztcbiBcblxufVxuXG5cbiJdfQ==