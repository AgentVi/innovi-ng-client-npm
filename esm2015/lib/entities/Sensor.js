import { BaseEntity } from '../entities/BaseEntity';
/*
   Sensor type
*/
export class Sensor extends BaseEntity {
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2Vuc29yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmctY29yZS1saWIvc3JjL2xpYi9lbnRpdGllcy9TZW5zb3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBT0EsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBS3BEOztFQUVFO0FBQ0YsTUFBTSxPQUFPLE1BQU8sU0FBUSxVQUFVO0NBaUlyQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRocmVzaG9sZHMgfSBmcm9tICcuLi9jb21tb24vVGhyZXNob2xkcyc7XG5pbXBvcnQgeyBTZW5zb3JTdGF0dXNDb2RlIH0gZnJvbSAnLi4vZW51bXMvU2Vuc29yU3RhdHVzQ29kZSc7XG5pbXBvcnQgeyBDb29yZGluYXRlIH0gZnJvbSAnLi4vY29tbW9uL0Nvb3JkaW5hdGUnO1xuaW1wb3J0IHsgRm92R2VvQXR0cmlidXRlcyB9IGZyb20gJy4uL2NvbW1vbi9Gb3ZHZW9BdHRyaWJ1dGVzJztcbmltcG9ydCB7IFN0cmluZ0tleVZhbHVlIH0gZnJvbSAnLi4vY29tbW9uL1N0cmluZ0tleVZhbHVlJztcbmltcG9ydCB7IFNlbnNvckRlYnVnSW5mbyB9IGZyb20gJy4uL2NvbW1vbi9TZW5zb3JEZWJ1Z0luZm8nO1xuaW1wb3J0IHsgVmlld1R5cGVDb2RlIH0gZnJvbSAnLi4vZW51bXMvVmlld1R5cGVDb2RlJztcbmltcG9ydCB7IEJhc2VFbnRpdHkgfSBmcm9tICcuLi9lbnRpdGllcy9CYXNlRW50aXR5JztcbmltcG9ydCB7IFNlbnNvclR5cGVDb2RlIH0gZnJvbSAnLi4vZW51bXMvU2Vuc29yVHlwZUNvZGUnO1xuaW1wb3J0IHsgU3RyZWFtVHlwZUNvZGUgfSBmcm9tICcuLi9lbnVtcy9TdHJlYW1UeXBlQ29kZSc7XG5pbXBvcnQgeyBTZW5zb3JSZXNvbHV0aW9uQ29kZSB9IGZyb20gJy4uL2VudW1zL1NlbnNvclJlc29sdXRpb25Db2RlJztcblxuLyogXG4gICBTZW5zb3IgdHlwZSBcbiovXG5leHBvcnQgY2xhc3MgU2Vuc29yIGV4dGVuZHMgQmFzZUVudGl0eSB7XG4gXG4gICAgLy8gQWNjb3VudCBJZCBcbiAgICBwdWJsaWMgYWNjb3VudElkOiBzdHJpbmc7XG4gXG4gICAgLy8gRm9sZGVyIElkIChlbXB0eSBmb3Igcm9vdCBmb2xkZXIpIFxuICAgIHB1YmxpYyBmb2xkZXJJZDogc3RyaW5nO1xuIFxuICAgIC8vIEFwcGxpYW5jZSBJZCBcbiAgICBwdWJsaWMgYXBwbGlhbmNlSWQ6IHN0cmluZztcbiBcbiAgICAvLyBBZ2VudCBJZCAoUmVsZXZhbnQgZm9yIG5ldyBwaXBlbGluZSBvbmx5KSBcbiAgICBwdWJsaWMgYWdlbnRJZDogc3RyaW5nO1xuIFxuICAgIC8vIFNlbnNvciBuYW1lIFxuICAgIHB1YmxpYyBuYW1lOiBzdHJpbmc7XG4gXG4gICAgLy8gU2Vuc29yIHR5cGU6IENDRCB8IFRIRVJNQUwgXG4gICAgcHVibGljIHR5cGU6IFNlbnNvclR5cGVDb2RlO1xuIFxuICAgIC8vIFNlbnNvciBzdGF0dXM6IFVOREVGSU5FRCB8IEFDVElWRSB8IFdBUk5JTkcgfCBFUlJPUiB8IElOQUNUSVZFIHwgU1VTUEVOREVEIHwgUEVORElORyBcbiAgICBwdWJsaWMgc3RhdHVzOiBTZW5zb3JTdGF0dXNDb2RlO1xuIFxuICAgIC8vIFNlbnNvciByZWFsIHRpbWUgc3RhdGUgYml0IG1hc2sgZmxhZ3MgXG4gICAgcHVibGljIHN0YXRlOiBudW1iZXI7XG4gXG4gICAgLy8gV2hlbiB3YXMgdGhlIGxhc3Qgc3RhdGUgcmVwb3J0IHVwZGF0ZSBbRXBvY2ggbWlsbGlzZWNvbmRzIFRpbWVzdGFtcF0gXG4gICAgcHVibGljIHN0YXRlUmVwb3J0ZWRPbjogbnVtYmVyO1xuIFxuICAgIC8vIFNlbnNvciB2aWRlbyBzdHJlYW0gdHlwZTogVU5ERUZJTkVEIHwgUlRTUCB8IE9OVklGIHwgQ0xJUCB8IFJUUCB8IE1VTFRJQ0FTVCBcbiAgICBwdWJsaWMgc3RyZWFtVHlwZTogU3RyZWFtVHlwZUNvZGU7XG4gXG4gICAgLy8gU2Vuc29yIHJlc29sdXRpb24gKGltYWdlIHF1YWxpdHkpOiBMT1cgKDApIHwgTUVESVVNICgxKSB8IEhJR0ggKDIpIFxuICAgIHB1YmxpYyBpbWFnZVJlc29sdXRpb246IFNlbnNvclJlc29sdXRpb25Db2RlO1xuIFxuICAgIC8vIEZsYWcgdG8gaW5kaWNhdGUgaWYgc2Vuc29yIGlzIHJlY29yZGluZyB2aWRlbyBcbiAgICBwdWJsaWMgcmVjb3JkaW5nOiBib29sZWFuO1xuIFxuICAgIC8vIEZsYWcgdG8gaW5kaWNhdGUgaWYgc2Vuc29yIHNob3VsZCBzZW5kIG1ldGFkYXRhIFxuICAgIHB1YmxpYyBtZXRhZGF0YTogYm9vbGVhbjtcbiBcbiAgICAvLyBGbGFnIHRvIGluZGljYXRlIGlmIGFub21hbHkgZGV0ZWN0aW9uIGlzIGVuYWJsZWQgZm9yIHRoaXMgc2Vuc29yIFxuICAgIHB1YmxpYyBhbm9tYWx5RGV0ZWN0aW9uOiBib29sZWFuO1xuIFxuICAgIC8vIEZsYWcgdG8gaW5kaWNhdGUgaWYgdW5hdHRlbmRlZCBvYmplY3QgZGV0ZWN0aW9uIG1vZGVsIGlzIGVuYWJsZWQgXG4gICAgcHVibGljIHVuYXR0ZW5kZWRPYmplY3Q6IGJvb2xlYW47XG4gXG4gICAgLy8gRmxhZyB0byBpbmRpY2F0ZSBpZiBmYWNlIHJlY29nbml0aW9uIG1vZGVsIGlzIGVuYWJsZWQgXG4gICAgcHVibGljIGZhY2VSZWNvZ25pdGlvbjogYm9vbGVhbjtcbiBcbiAgICAvLyBNaW5pbWFsIHRpbWUgaW50ZXJ2YWwgYmV0d2VlbiBhbGFybXMgKGluIHNlY29uZHMpIC0gMCBmb3Igbm8gaW50ZXJ2YWwgXG4gICAgcHVibGljIGFsYXJtSW50ZXJ2YWw6IG51bWJlcjtcbiBcbiAgICAvLyBNYXggbnVtYmVyIG9mIGJvdW5kaW5nIGJveCBwZXIgZnJhbWUgXG4gICAgcHVibGljIG1heEJCb3hQZXJGcmFtZTogbnVtYmVyO1xuIFxuICAgIC8vIE1heCBmcmFtZSByYXRlIFxuICAgIHB1YmxpYyBtYXhGcmFtZVJhdGU6IG51bWJlcjtcbiBcbiAgICAvLyBWaWRlbyBzdHJlYW0gc291cmNlIFVSSSwgZm9ybWF0IGFuZCBzY2hlbWVzIGlzIGRlcml2ZWQgZnJvbSB0aGUgc3RyZWFtIHR5cGUsIHNlZSBTdHJlYW1UeXBlQ29kZSkgXG4gICAgcHVibGljIHN0cmVhbVVyaTogc3RyaW5nO1xuIFxuICAgIC8vIFNlbnNvciBnZW8gbG9jYXRpb24gKFdHUy04NCBjb29yZGluYXRlIHN5c3RlbSkgXG4gICAgcHVibGljIGdlb0xvY2F0aW9uOiBDb29yZGluYXRlO1xuIFxuICAgIC8vIFNlbnNvciBGT1YgYXppbXV0aCAoMCAtIDM1OSkgXG4gICAgcHVibGljIGF6aW11dGg6IG51bWJlcjtcbiBcbiAgICAvLyBGaWVsZCBvZiBWaWV3IEdlbyBhdHRyaWJ1dGVzICh1c2VkIGZvciBGT1YgdG8gV0dTLTg0IHRyYW5zZm9ybWF0aW9ucykgXG4gICAgcHVibGljIGZvdkF0dHJpYnV0ZXM6IEZvdkdlb0F0dHJpYnV0ZXM7XG4gXG4gICAgLy8gRXh0ZXJuYWwgaWQgKGNhbWVyYSBpZCBpbiBleHRlcm5hbCBzeXN0ZW0pIFxuICAgIHB1YmxpYyBleHRlcm5hbElkOiBzdHJpbmc7XG4gXG4gICAgLy8gVXNlciBkZWZpbmVkIHRhZ3MgKGxpc3Qgb2Yga2V5LXZhbHVlIHBhaXJzKSBcbiAgICBwdWJsaWMgdGFnczogU3RyaW5nS2V5VmFsdWVbXTtcbiBcbiAgICAvLyBIZWFsdGggbm90aWZpY2F0aW9ucyB0aHJlc2hvbGRzIFxuICAgIHB1YmxpYyBoZWFsdGhUaHJlc2hvbGRzOiBUaHJlc2hvbGRzO1xuIFxuICAgIC8vIFNlbnNvciBkZWJ1ZyBpbmZvcm1hdGlvbiBmbGFncyBcbiAgICBwdWJsaWMgZGVidWdJbmZvOiBTZW5zb3JEZWJ1Z0luZm87XG4gXG4gICAgLy8gRmxhZyB0byBpbmRpY2F0ZSBpZiB0aGUgYWdlbnQgc2hvdWxkIHN5bmMgdGhlIGZyYW1lIHRpbWVzdGFtcHMgZnJvbSB0aGUgUlRTUCBzdHJlYW0gXG4gICAgcHVibGljIHN5bmNUaW1lVG9TdHJlYW06IGJvb2xlYW47XG4gXG4gICAgLy8gU3RyZWFtIGNvZGVjIChpLmUuIGguMjY0LCBoLjI2NSBldGMpIFxuICAgIHB1YmxpYyBjb2RlYzogc3RyaW5nO1xuIFxuICAgIC8vIFN0cmVhbSByZXNvbHV0aW9uIChpLmUuIDEyODB4NzIwLCAxOTIweDEwODAgZXRjKSBcbiAgICBwdWJsaWMgcmVzb2x1dGlvbjogc3RyaW5nO1xuIFxuICAgIC8vIFN0cmVhbSBmcmFtZXJhdGUgKGZyYW1lcyBwZXIgc2Vjb25kKSBcbiAgICBwdWJsaWMgZnJhbWVyYXRlOiBudW1iZXI7XG4gXG4gICAgLy8gRmxhZyB0byBpbmRpY2F0ZSB0byB1c2UgRlIgZm9yIGZhciBvYmplY3QgZGV0ZWN0aW9uIChvbiB0aGVybWFsIGNhbWVyYXMgb25seSkgXG4gICAgcHVibGljIGhpZ2hTZW5zaXRpdml0eTogYm9vbGVhbjtcbiBcbiAgICAvLyBWaWV3IHR5cGU6IE5PUk1BTCB8IEZJU0hFWUVfT1ZFUkhFQUQgXG4gICAgcHVibGljIHZpZXdUeXBlOiBWaWV3VHlwZUNvZGU7XG4gXG4gICAgLy8gRmxhZyB0byBpbmRpY2F0ZSBpZiBwb3NlIGVzdGltYXRpb24gbW9kZWwgaXMgZW5hYmxlZCBcbiAgICBwdWJsaWMgcG9zZUVzdGltYXRpb246IGJvb2xlYW47XG4gXG4gICAgLy8gRmxhZyB0byBpbmRpY2F0ZSBpZiBldmVudCBmaWx0ZXJpbmcgaXMgZW5hYmxlZCBcbiAgICBwdWJsaWMgZXZlbnRGaWx0ZXJpbmc6IGJvb2xlYW47XG4gXG4gICAgLy8gTWF4IGNsaXAgbGVuZ3RoIGluIHNlY3MsIDAgbWVhbnMgaW5oZXJpdGVkIGZyb20gYWNjb3VudCBsZXZlbCBcbiAgICBwdWJsaWMgZXZlbnRDbGlwTGVuZ3RoU2VjOiBudW1iZXI7XG4gXG4gICAgLy8gRmxhZyB0byBpbmRpY2F0ZSBpZiBwZXJzb24gcmVjb2duaXRpb24gaXMgZW5hYmxlZCBcbiAgICBwdWJsaWMgcGVyc29uUmVjb2duaXRpb246IGJvb2xlYW47XG4gXG4gICAgLy8gRW50aXR5IElkIFxuICAgIHB1YmxpYyBpZDogc3RyaW5nO1xuIFxuICAgIC8vIEVudGl0eSBkb2N1bWVudCB0eXBlIChzeXN0ZW0gZmllbGQpIFxuICAgIHB1YmxpYyBfdHlwZTogc3RyaW5nO1xuIFxuICAgIC8vIFdoZW4gdGhlIGVudGl0eSB3YXMgY3JlYXRlZCBbRXBvY2ggbWlsbGlzZWNvbmRzIFRpbWVzdGFtcF0gXG4gICAgcHVibGljIGNyZWF0ZWRPbjogbnVtYmVyO1xuIFxuICAgIC8vIFdoZW4gdGhlIGVudGl0eSB3YXMgdXBkYXRlZCBbRXBvY2ggbWlsbGlzZWNvbmRzIFRpbWVzdGFtcF0gXG4gICAgcHVibGljIHVwZGF0ZWRPbjogbnVtYmVyO1xuIFxuICAgIC8vIEVudGl0eSBwYXRoIGluIHRoZSBoaWVyYXJjaHkgXG4gICAgcHVibGljIHBhdGg6IHN0cmluZztcbiBcblxufVxuXG5cbiJdfQ==