/*
   Edge appliance capabilities full report <br>
   This structure describes the HW and SW spec of the device, most of the data is collected by the software and provided by the device<br>
   Some fields represents the device configuration (report intervals, docker credentials, components versions etc) and they are provided by the backend on device registration.
*/
export class ApplianceCapabilities {
    constructor(productType, serialNumber, deviceModel, cpuModel, uuid, ip, host, dockerVersion, kernelVersion, totalRam, disks, commandInterval, statusInterval, dockerCredentials, configurationVersion, profileId, errors) {
        this.productType = productType;
        this.serialNumber = serialNumber;
        this.deviceModel = deviceModel;
        this.cpuModel = cpuModel;
        this.uuid = uuid;
        this.ip = ip;
        this.host = host;
        this.dockerVersion = dockerVersion;
        this.kernelVersion = kernelVersion;
        this.totalRam = totalRam;
        this.disks = disks;
        this.commandInterval = commandInterval;
        this.statusInterval = statusInterval;
        this.dockerCredentials = dockerCredentials;
        this.configurationVersion = configurationVersion;
        this.profileId = profileId;
        this.errors = errors;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXBwbGlhbmNlQ2FwYWJpbGl0aWVzLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFnZW50dmkvbmctY29yZS1saWIvIiwic291cmNlcyI6WyJsaWIvZW50aXRpZXMvQXBwbGlhbmNlQ2FwYWJpbGl0aWVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUtBOzs7O0VBSUU7QUFDRixNQUFNLE9BQU8scUJBQXFCO0lBcUQ5QixZQUFZLFdBQTZCLEVBQUUsWUFBcUIsRUFBRSxXQUFvQixFQUFFLFFBQWlCLEVBQUUsSUFBYSxFQUFFLEVBQVcsRUFBRSxJQUFhLEVBQUUsYUFBc0IsRUFBRSxhQUFzQixFQUFFLFFBQWlCLEVBQUUsS0FBa0IsRUFBRSxlQUF3QixFQUFFLGNBQXVCLEVBQUUsaUJBQXFDLEVBQUUsb0JBQTJDLEVBQUUsU0FBa0IsRUFBRSxNQUFlO1FBQ25aLElBQUksQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFDO1FBQy9CLElBQUksQ0FBQyxZQUFZLEdBQUcsWUFBWSxDQUFDO1FBQ2pDLElBQUksQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFDO1FBQy9CLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDO1FBQ2IsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLGFBQWEsR0FBRyxhQUFhLENBQUM7UUFDbkMsSUFBSSxDQUFDLGFBQWEsR0FBRyxhQUFhLENBQUM7UUFDbkMsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDekIsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLGVBQWUsR0FBRyxlQUFlLENBQUM7UUFDdkMsSUFBSSxDQUFDLGNBQWMsR0FBRyxjQUFjLENBQUM7UUFDckMsSUFBSSxDQUFDLGlCQUFpQixHQUFHLGlCQUFpQixDQUFDO1FBQzNDLElBQUksQ0FBQyxvQkFBb0IsR0FBRyxvQkFBb0IsQ0FBQztRQUNqRCxJQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztRQUMzQixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztJQUN6QixDQUFDO0NBRUoiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb25maWd1cmF0aW9uVmVyc2lvbiB9IGZyb20gJy4uL2VudGl0aWVzL0NvbmZpZ3VyYXRpb25WZXJzaW9uJztcbmltcG9ydCB7IFByb2R1Y3RUeXBlQ29kZSB9IGZyb20gJy4uL2VudW1zL1Byb2R1Y3RUeXBlQ29kZSc7XG5pbXBvcnQgeyBEaXNrSW5mbyB9IGZyb20gJy4uL2NvbW1vbi9EaXNrSW5mbyc7XG5pbXBvcnQgeyBEb2NrZXJDcmVkZW50aWFscyB9IGZyb20gJy4uL2NvbW1vbi9Eb2NrZXJDcmVkZW50aWFscyc7XG5cbi8qIFxuICAgRWRnZSBhcHBsaWFuY2UgY2FwYWJpbGl0aWVzIGZ1bGwgcmVwb3J0IDxicj5cbiAgIFRoaXMgc3RydWN0dXJlIGRlc2NyaWJlcyB0aGUgSFcgYW5kIFNXIHNwZWMgb2YgdGhlIGRldmljZSwgbW9zdCBvZiB0aGUgZGF0YSBpcyBjb2xsZWN0ZWQgYnkgdGhlIHNvZnR3YXJlIGFuZCBwcm92aWRlZCBieSB0aGUgZGV2aWNlPGJyPlxuICAgU29tZSBmaWVsZHMgcmVwcmVzZW50cyB0aGUgZGV2aWNlIGNvbmZpZ3VyYXRpb24gKHJlcG9ydCBpbnRlcnZhbHMsIGRvY2tlciBjcmVkZW50aWFscywgY29tcG9uZW50cyB2ZXJzaW9ucyBldGMpIGFuZCB0aGV5IGFyZSBwcm92aWRlZCBieSB0aGUgYmFja2VuZCBvbiBkZXZpY2UgcmVnaXN0cmF0aW9uLiBcbiovXG5leHBvcnQgY2xhc3MgQXBwbGlhbmNlQ2FwYWJpbGl0aWVzIHtcbiBcbiAgICAvLyBQcm9kdWN0IHR5cGUgY29kZSAoKHByb3ZpZGVkIGJ5IHRoZSBkZXZpY2UsIGluamVjdGVkKSBcbiAgICBwdWJsaWMgcHJvZHVjdFR5cGU6IFByb2R1Y3RUeXBlQ29kZTtcbiBcbiAgICAvLyBBcHBsaWFuY2UgSFcgc2VyaWFsIG51bWJlciAocHJvdmlkZWQgYnkgdGhlIGRldmljZSkgXG4gICAgcHVibGljIHNlcmlhbE51bWJlcjogc3RyaW5nO1xuIFxuICAgIC8vIEFwcGxpYW5jZSBIVyBtb2RlbCBuYW1lIChwcm92aWRlZCBieSB0aGUgZGV2aWNlKSBcbiAgICBwdWJsaWMgZGV2aWNlTW9kZWw6IHN0cmluZztcbiBcbiAgICAvLyBBcHBsaWFuY2UgQ1BVIG1vZGVsIG5hbWUgKHByb3ZpZGVkIGJ5IHRoZSBkZXZpY2UpIFxuICAgIHB1YmxpYyBjcHVNb2RlbDogc3RyaW5nO1xuIFxuICAgIC8vIEFwcGxpYW5jZSBVUG5QIFVVSUQgKHByb3ZpZGVkIGJ5IHRoZSBkZXZpY2UpIFxuICAgIHB1YmxpYyB1dWlkOiBzdHJpbmc7XG4gXG4gICAgLy8gQXBwbGlhbmNlIElQIGFkZHJlc3MgKHByb3ZpZGVkIGJ5IHRoZSBkZXZpY2UpIFxuICAgIHB1YmxpYyBpcDogc3RyaW5nO1xuIFxuICAgIC8vIEFwcGxpYW5jZSBIb3N0IG5hbWUgKHByb3ZpZGVkIGJ5IHRoZSBkZXZpY2UpIFxuICAgIHB1YmxpYyBob3N0OiBzdHJpbmc7XG4gXG4gICAgLy8gRG9ja2VyIGVuZ2luZSB2ZXJzaW9uIChwcm92aWRlZCBieSB0aGUgZGV2aWNlKSBcbiAgICBwdWJsaWMgZG9ja2VyVmVyc2lvbjogc3RyaW5nO1xuIFxuICAgIC8vIExpbnV4IEtlcm5lbCB2ZXJzaW9uIChwcm92aWRlZCBieSB0aGUgZGV2aWNlKSBcbiAgICBwdWJsaWMga2VybmVsVmVyc2lvbjogc3RyaW5nO1xuIFxuICAgIC8vIFRvdGFsIFJBTSBzaXplIChieXRlcykgKHByb3ZpZGVkIGJ5IHRoZSBkZXZpY2UpIFxuICAgIHB1YmxpYyB0b3RhbFJhbTogbnVtYmVyO1xuIFxuICAgIC8vIERpc2sgaW5mbyBhYm91dCBhbGwgdGhlIGRpc2tzIGluc3RhbGxlZCAocHJvdmlkZWQgYnkgdGhlIGRldmljZSkgXG4gICAgcHVibGljIGRpc2tzOiBEaXNrSW5mb1tdO1xuIFxuICAgIC8vIENvbW1hbmQgaW50ZXJ2YWwgaW4gc2Vjb25kczogaG93IG9mdGVuIHRvIHB1bGwgZm9yIGNvbW1hbmRzIChwcm92aWRlZCBieSB0aGUgc3lzdGVtKTxicj4gVGhlIGRldmljZSBzaGFsbCBwcm92aWRlIGEgZGVmYXVsdCB2YWx1ZSBvZiAxMCwgdGhlIHN5c3RlbSBtaWdodCBwcm92aWRlIGRpZmZlcmVudCB2YWx1ZSBcbiAgICBwdWJsaWMgY29tbWFuZEludGVydmFsOiBudW1iZXI7XG4gXG4gICAgLy8gU3RhdHVzIGludGVydmFsIGluIHNlY29uZHM6IGhvdyBvZnRlbiB0byBzZW5kIHN0YXR1cyBpbmZvIChwcm92aWRlZCBieSB0aGUgc3lzdGVtKTxicj4gVGhlIGRldmljZSBzaGFsbCBwcm92aWRlIGEgZGVmYXVsdCB2YWx1ZSBvZiAxMjAgc2Vjb25kcywgdGhlIHN5c3RlbSBtaWdodCBwcm92aWRlIGRpZmZlcmVudCB2YWx1ZSBcbiAgICBwdWJsaWMgc3RhdHVzSW50ZXJ2YWw6IG51bWJlcjtcbiBcbiAgICAvLyBEb2NrZXIgcmVwb3NpdG9yeSBjcmVkZW50aWFscyAocHJvdmlkZWQgYnkgdGhlIHN5c3RlbSk8YnI+IFxuICAgIHB1YmxpYyBkb2NrZXJDcmVkZW50aWFsczogRG9ja2VyQ3JlZGVudGlhbHM7XG4gXG4gICAgLy8gU1cgQ29tcG9uZW50cyBjb25maWd1cmF0aW9uIHZlcnNpb24gKHByb3ZpZGVkIGJ5IHRoZSBzeXN0ZW0pPGJyPiBUaGlzIHN0cnVjdHVyZSBkZXNjcmliZXMgdGhlIFNXIGNvbXBvbmVudHMgdmVyc2lvbiB0byBiZSBkZXBsb3llZCBpbiB0aGUgZGV2aWNlIFxuICAgIHB1YmxpYyBjb25maWd1cmF0aW9uVmVyc2lvbjogQ29uZmlndXJhdGlvblZlcnNpb247XG4gXG4gICAgLy8gQ29uZmlndXJhdGlvbiBwcm9maWxlIElkIFxuICAgIHB1YmxpYyBwcm9maWxlSWQ6IHN0cmluZztcbiBcbiAgICAvLyBMaXN0IG9mIGVycm9ycyBpZiB0aGUgZGV2aWNlIG1hbmFnZXIgZmFpbGVkIHRvIHJldHJpZXZlIHNvbWUgb2YgdGhlIGRhdGEgXG4gICAgcHVibGljIGVycm9yczogc3RyaW5nO1xuIFxuICAgIGNvbnN0cnVjdG9yKHByb2R1Y3RUeXBlPzogUHJvZHVjdFR5cGVDb2RlLCBzZXJpYWxOdW1iZXI/OiBzdHJpbmcsIGRldmljZU1vZGVsPzogc3RyaW5nLCBjcHVNb2RlbD86IHN0cmluZywgdXVpZD86IHN0cmluZywgaXA/OiBzdHJpbmcsIGhvc3Q/OiBzdHJpbmcsIGRvY2tlclZlcnNpb24/OiBzdHJpbmcsIGtlcm5lbFZlcnNpb24/OiBzdHJpbmcsIHRvdGFsUmFtPzogbnVtYmVyLCBkaXNrcz86IERpc2tJbmZvW10sIGNvbW1hbmRJbnRlcnZhbD86IG51bWJlciwgc3RhdHVzSW50ZXJ2YWw/OiBudW1iZXIsIGRvY2tlckNyZWRlbnRpYWxzPzogRG9ja2VyQ3JlZGVudGlhbHMsIGNvbmZpZ3VyYXRpb25WZXJzaW9uPzogQ29uZmlndXJhdGlvblZlcnNpb24sIHByb2ZpbGVJZD86IHN0cmluZywgZXJyb3JzPzogc3RyaW5nKSB7IFxuICAgICAgICB0aGlzLnByb2R1Y3RUeXBlID0gcHJvZHVjdFR5cGU7XG4gICAgICAgIHRoaXMuc2VyaWFsTnVtYmVyID0gc2VyaWFsTnVtYmVyO1xuICAgICAgICB0aGlzLmRldmljZU1vZGVsID0gZGV2aWNlTW9kZWw7XG4gICAgICAgIHRoaXMuY3B1TW9kZWwgPSBjcHVNb2RlbDtcbiAgICAgICAgdGhpcy51dWlkID0gdXVpZDtcbiAgICAgICAgdGhpcy5pcCA9IGlwO1xuICAgICAgICB0aGlzLmhvc3QgPSBob3N0O1xuICAgICAgICB0aGlzLmRvY2tlclZlcnNpb24gPSBkb2NrZXJWZXJzaW9uO1xuICAgICAgICB0aGlzLmtlcm5lbFZlcnNpb24gPSBrZXJuZWxWZXJzaW9uO1xuICAgICAgICB0aGlzLnRvdGFsUmFtID0gdG90YWxSYW07XG4gICAgICAgIHRoaXMuZGlza3MgPSBkaXNrcztcbiAgICAgICAgdGhpcy5jb21tYW5kSW50ZXJ2YWwgPSBjb21tYW5kSW50ZXJ2YWw7XG4gICAgICAgIHRoaXMuc3RhdHVzSW50ZXJ2YWwgPSBzdGF0dXNJbnRlcnZhbDtcbiAgICAgICAgdGhpcy5kb2NrZXJDcmVkZW50aWFscyA9IGRvY2tlckNyZWRlbnRpYWxzO1xuICAgICAgICB0aGlzLmNvbmZpZ3VyYXRpb25WZXJzaW9uID0gY29uZmlndXJhdGlvblZlcnNpb247XG4gICAgICAgIHRoaXMucHJvZmlsZUlkID0gcHJvZmlsZUlkO1xuICAgICAgICB0aGlzLmVycm9ycyA9IGVycm9ycztcbiAgICB9XG5cbn1cblxuXG4iXX0=