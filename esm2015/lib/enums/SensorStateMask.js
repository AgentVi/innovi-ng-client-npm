/*
   Sensor state mask - the bit mask represents the actual state of the sensor as reported by the agent / agent proxy
   Bit mask range:
   OK:		0
   WARNING:	[0x00001 - 0x0000FFFF]		1 - 65535
   ERROR:		[0x10000 - 0xFFFFFFFF]		65536 - MaxInt
*/
export var SensorStateMask;
(function (SensorStateMask) {
    // [OK] No error [0x0] 
    SensorStateMask[SensorStateMask["SENSOR_OK"] = 0] = "SENSOR_OK";
    // [WARNING] Video stream FPS is less than 6 for one minute [0x00000001] 
    SensorStateMask[SensorStateMask["LOW_FRAMERATE_WARN"] = 1] = "LOW_FRAMERATE_WARN";
    // [WARNING] Video stream FPS is more than 30 for one minute [0x00000002] 
    SensorStateMask[SensorStateMask["HIGH_FRAMERATE_WARN"] = 2] = "HIGH_FRAMERATE_WARN";
    // [WARNING] Image from video source is blocked [0x00000004] 
    SensorStateMask[SensorStateMask["IMAGE_BLOCKED_WARN"] = 4] = "IMAGE_BLOCKED_WARN";
    // [WARNING] Image from video source is saturated [0x00000008] 
    SensorStateMask[SensorStateMask["IMAGE_SATURATED_WARN"] = 8] = "IMAGE_SATURATED_WARN";
    // [WARNING] Image from video source is dark [0x00000010] 
    SensorStateMask[SensorStateMask["IMAGE_DARK_WARN"] = 16] = "IMAGE_DARK_WARN";
    // [WARNING] Downloading clip, this may take a few minutes depending on file size 
    SensorStateMask[SensorStateMask["SOURCE_DOWNLOADING_CLIP_WARN"] = 32] = "SOURCE_DOWNLOADING_CLIP_WARN";
    // [WARNING] Initializing stream from camera 
    SensorStateMask[SensorStateMask["SOURCE_INITIALIZING_STREAM_WARN"] = 64] = "SOURCE_INITIALIZING_STREAM_WARN";
    // [INACTIVE] Sensor is not active due to user action (enable/disable, attach/detach) 
    SensorStateMask[SensorStateMask["SENSOR_INACTIVE"] = 4096] = "SENSOR_INACTIVE";
    // [ERROR] Communication error [0x00010000] 
    SensorStateMask[SensorStateMask["NO_COMM_ERROR"] = 65536] = "NO_COMM_ERROR";
    // [ERROR] Internal sensor error, contact Agent Vi support [0x00020000] 
    SensorStateMask[SensorStateMask["SENSOR_ERROR"] = 131072] = "SENSOR_ERROR";
    // [ERROR] Internal stream error, contact Agent Vi support [0x00040000] 
    SensorStateMask[SensorStateMask["SOURCE_ERROR"] = 262144] = "SOURCE_ERROR";
    // [ERROR] Unsupported video codec, change the source stream configuration [0x00080000] 
    SensorStateMask[SensorStateMask["FORMAT_ERROR"] = 524288] = "FORMAT_ERROR";
    // [ERROR] Unsupported video resolution, change the source stream configuration [0x00100000] 
    SensorStateMask[SensorStateMask["RESOLUTION_ERROR"] = 1048576] = "RESOLUTION_ERROR";
    // [ERROR] Framerate is 0 for 1 min [0x0000000000000400] 
    SensorStateMask[SensorStateMask["CRITICAL_FRAMERATE_ERROR"] = 2097152] = "CRITICAL_FRAMERATE_ERROR";
    // [ERROR] RTSP timeout, try toggling the multicast support setting [0x00400000] 
    SensorStateMask[SensorStateMask["SOURCE_ERROR_RTSP_TIMEOUT"] = 4194304] = "SOURCE_ERROR_RTSP_TIMEOUT";
    // RTSP stream issue, try opening with VLC player 
    SensorStateMask[SensorStateMask["SOURCE_ERROR_RTSP_NOT_SUPPORTED"] = 8388608] = "SOURCE_ERROR_RTSP_NOT_SUPPORTED";
    // [ERROR] Failed to download clip, check the path [0x01000000] 
    SensorStateMask[SensorStateMask["SOURCE_ERROR_CANT_DOWNLOAD_CLIP"] = 16777216] = "SOURCE_ERROR_CANT_DOWNLOAD_CLIP";
    // [ERROR] RTSP host not reachable, check the host and port address, try toggling the multicast support setting [0x02000000] 
    SensorStateMask[SensorStateMask["SOURCE_ERROR_RTSP_HOST_NOT_REACHABLE"] = 33554432] = "SOURCE_ERROR_RTSP_HOST_NOT_REACHABLE";
    // [ERROR] RTSP authentication error, check the user and password [0x04000000] 
    SensorStateMask[SensorStateMask["SOURCE_ERROR_AUTHENTICATION"] = 67108864] = "SOURCE_ERROR_AUTHENTICATION";
    // [ERROR] ONVIF host not reachable, check the address and user\password [0x08000000] 
    SensorStateMask[SensorStateMask["SOURCE_ERROR_ONVIF_NO_RTSP_URL"] = 134217728] = "SOURCE_ERROR_ONVIF_NO_RTSP_URL";
    // [ERROR] ONVIF error, contact Agent Vi support [0x10000000] 
    SensorStateMask[SensorStateMask["SOURCE_ERROR_ONVIF_INVALID_RTSP_URL"] = 268435456] = "SOURCE_ERROR_ONVIF_INVALID_RTSP_URL";
    // [ERROR] Unsupported URI, contact Agent Vi support [0x20000000] 
    SensorStateMask[SensorStateMask["SOURCE_ERROR_BAD_URI"] = 536870912] = "SOURCE_ERROR_BAD_URI";
    // [ERROR] Large time gap in stream, check the source stream [0x40000000] 
    SensorStateMask[SensorStateMask["SOURCE_ERROR_LARGE_FRAME_GAP"] = 1073741824] = "SOURCE_ERROR_LARGE_FRAME_GAP";
})(SensorStateMask || (SensorStateMask = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2Vuc29yU3RhdGVNYXNrLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmctY29yZS1saWIvc3JjL2xpYi9lbnVtcy9TZW5zb3JTdGF0ZU1hc2sudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztFQU1FO0FBQ0YsTUFBTSxDQUFOLElBQVksZUEwRVg7QUExRUQsV0FBWSxlQUFlO0lBRXZCLHVCQUF1QjtJQUN2QiwrREFBYSxDQUFBO0lBRWIseUVBQXlFO0lBQ3pFLGlGQUFzQixDQUFBO0lBRXRCLDBFQUEwRTtJQUMxRSxtRkFBdUIsQ0FBQTtJQUV2Qiw2REFBNkQ7SUFDN0QsaUZBQXNCLENBQUE7SUFFdEIsK0RBQStEO0lBQy9ELHFGQUF3QixDQUFBO0lBRXhCLDBEQUEwRDtJQUMxRCw0RUFBb0IsQ0FBQTtJQUVwQixrRkFBa0Y7SUFDbEYsc0dBQWlDLENBQUE7SUFFakMsNkNBQTZDO0lBQzdDLDRHQUFvQyxDQUFBO0lBRXBDLHNGQUFzRjtJQUN0Riw4RUFBc0IsQ0FBQTtJQUV0Qiw0Q0FBNEM7SUFDNUMsMkVBQXFCLENBQUE7SUFFckIsd0VBQXdFO0lBQ3hFLDBFQUFxQixDQUFBO0lBRXJCLHdFQUF3RTtJQUN4RSwwRUFBcUIsQ0FBQTtJQUVyQix3RkFBd0Y7SUFDeEYsMEVBQXFCLENBQUE7SUFFckIsNkZBQTZGO0lBQzdGLG1GQUEwQixDQUFBO0lBRTFCLHlEQUF5RDtJQUN6RCxtR0FBa0MsQ0FBQTtJQUVsQyxpRkFBaUY7SUFDakYscUdBQW1DLENBQUE7SUFFbkMsa0RBQWtEO0lBQ2xELGlIQUF5QyxDQUFBO0lBRXpDLGdFQUFnRTtJQUNoRSxrSEFBMEMsQ0FBQTtJQUUxQyw2SEFBNkg7SUFDN0gsNEhBQStDLENBQUE7SUFFL0MsK0VBQStFO0lBQy9FLDBHQUFzQyxDQUFBO0lBRXRDLHNGQUFzRjtJQUN0RixpSEFBMEMsQ0FBQTtJQUUxQyw4REFBOEQ7SUFDOUQsMkhBQStDLENBQUE7SUFFL0Msa0VBQWtFO0lBQ2xFLDZGQUFnQyxDQUFBO0lBRWhDLDBFQUEwRTtJQUMxRSw4R0FBeUMsQ0FBQTtBQUU3QyxDQUFDLEVBMUVXLGVBQWUsS0FBZixlQUFlLFFBMEUxQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIFxuICAgU2Vuc29yIHN0YXRlIG1hc2sgLSB0aGUgYml0IG1hc2sgcmVwcmVzZW50cyB0aGUgYWN0dWFsIHN0YXRlIG9mIHRoZSBzZW5zb3IgYXMgcmVwb3J0ZWQgYnkgdGhlIGFnZW50IC8gYWdlbnQgcHJveHlcbiAgIEJpdCBtYXNrIHJhbmdlOlxuICAgT0s6XHRcdDBcbiAgIFdBUk5JTkc6XHRbMHgwMDAwMSAtIDB4MDAwMEZGRkZdXHRcdDEgLSA2NTUzNVxuICAgRVJST1I6XHRcdFsweDEwMDAwIC0gMHhGRkZGRkZGRl1cdFx0NjU1MzYgLSBNYXhJbnQgXG4qL1xuZXhwb3J0IGVudW0gU2Vuc29yU3RhdGVNYXNrIHtcbiBcbiAgICAvLyBbT0tdIE5vIGVycm9yIFsweDBdIFxuICAgIFNFTlNPUl9PSyA9IDAsXG4gXG4gICAgLy8gW1dBUk5JTkddIFZpZGVvIHN0cmVhbSBGUFMgaXMgbGVzcyB0aGFuIDYgZm9yIG9uZSBtaW51dGUgWzB4MDAwMDAwMDFdIFxuICAgIExPV19GUkFNRVJBVEVfV0FSTiA9IDEsXG4gXG4gICAgLy8gW1dBUk5JTkddIFZpZGVvIHN0cmVhbSBGUFMgaXMgbW9yZSB0aGFuIDMwIGZvciBvbmUgbWludXRlIFsweDAwMDAwMDAyXSBcbiAgICBISUdIX0ZSQU1FUkFURV9XQVJOID0gMixcbiBcbiAgICAvLyBbV0FSTklOR10gSW1hZ2UgZnJvbSB2aWRlbyBzb3VyY2UgaXMgYmxvY2tlZCBbMHgwMDAwMDAwNF0gXG4gICAgSU1BR0VfQkxPQ0tFRF9XQVJOID0gNCxcbiBcbiAgICAvLyBbV0FSTklOR10gSW1hZ2UgZnJvbSB2aWRlbyBzb3VyY2UgaXMgc2F0dXJhdGVkIFsweDAwMDAwMDA4XSBcbiAgICBJTUFHRV9TQVRVUkFURURfV0FSTiA9IDgsXG4gXG4gICAgLy8gW1dBUk5JTkddIEltYWdlIGZyb20gdmlkZW8gc291cmNlIGlzIGRhcmsgWzB4MDAwMDAwMTBdIFxuICAgIElNQUdFX0RBUktfV0FSTiA9IDE2LFxuIFxuICAgIC8vIFtXQVJOSU5HXSBEb3dubG9hZGluZyBjbGlwLCB0aGlzIG1heSB0YWtlIGEgZmV3IG1pbnV0ZXMgZGVwZW5kaW5nIG9uIGZpbGUgc2l6ZSBcbiAgICBTT1VSQ0VfRE9XTkxPQURJTkdfQ0xJUF9XQVJOID0gMzIsXG4gXG4gICAgLy8gW1dBUk5JTkddIEluaXRpYWxpemluZyBzdHJlYW0gZnJvbSBjYW1lcmEgXG4gICAgU09VUkNFX0lOSVRJQUxJWklOR19TVFJFQU1fV0FSTiA9IDY0LFxuIFxuICAgIC8vIFtJTkFDVElWRV0gU2Vuc29yIGlzIG5vdCBhY3RpdmUgZHVlIHRvIHVzZXIgYWN0aW9uIChlbmFibGUvZGlzYWJsZSwgYXR0YWNoL2RldGFjaCkgXG4gICAgU0VOU09SX0lOQUNUSVZFID0gNDA5NixcbiBcbiAgICAvLyBbRVJST1JdIENvbW11bmljYXRpb24gZXJyb3IgWzB4MDAwMTAwMDBdIFxuICAgIE5PX0NPTU1fRVJST1IgPSA2NTUzNixcbiBcbiAgICAvLyBbRVJST1JdIEludGVybmFsIHNlbnNvciBlcnJvciwgY29udGFjdCBBZ2VudCBWaSBzdXBwb3J0IFsweDAwMDIwMDAwXSBcbiAgICBTRU5TT1JfRVJST1IgPSAxMzEwNzIsXG4gXG4gICAgLy8gW0VSUk9SXSBJbnRlcm5hbCBzdHJlYW0gZXJyb3IsIGNvbnRhY3QgQWdlbnQgVmkgc3VwcG9ydCBbMHgwMDA0MDAwMF0gXG4gICAgU09VUkNFX0VSUk9SID0gMjYyMTQ0LFxuIFxuICAgIC8vIFtFUlJPUl0gVW5zdXBwb3J0ZWQgdmlkZW8gY29kZWMsIGNoYW5nZSB0aGUgc291cmNlIHN0cmVhbSBjb25maWd1cmF0aW9uIFsweDAwMDgwMDAwXSBcbiAgICBGT1JNQVRfRVJST1IgPSA1MjQyODgsXG4gXG4gICAgLy8gW0VSUk9SXSBVbnN1cHBvcnRlZCB2aWRlbyByZXNvbHV0aW9uLCBjaGFuZ2UgdGhlIHNvdXJjZSBzdHJlYW0gY29uZmlndXJhdGlvbiBbMHgwMDEwMDAwMF0gXG4gICAgUkVTT0xVVElPTl9FUlJPUiA9IDEwNDg1NzYsXG4gXG4gICAgLy8gW0VSUk9SXSBGcmFtZXJhdGUgaXMgMCBmb3IgMSBtaW4gWzB4MDAwMDAwMDAwMDAwMDQwMF0gXG4gICAgQ1JJVElDQUxfRlJBTUVSQVRFX0VSUk9SID0gMjA5NzE1MixcbiBcbiAgICAvLyBbRVJST1JdIFJUU1AgdGltZW91dCwgdHJ5IHRvZ2dsaW5nIHRoZSBtdWx0aWNhc3Qgc3VwcG9ydCBzZXR0aW5nIFsweDAwNDAwMDAwXSBcbiAgICBTT1VSQ0VfRVJST1JfUlRTUF9USU1FT1VUID0gNDE5NDMwNCxcbiBcbiAgICAvLyBSVFNQIHN0cmVhbSBpc3N1ZSwgdHJ5IG9wZW5pbmcgd2l0aCBWTEMgcGxheWVyIFxuICAgIFNPVVJDRV9FUlJPUl9SVFNQX05PVF9TVVBQT1JURUQgPSA4Mzg4NjA4LFxuIFxuICAgIC8vIFtFUlJPUl0gRmFpbGVkIHRvIGRvd25sb2FkIGNsaXAsIGNoZWNrIHRoZSBwYXRoIFsweDAxMDAwMDAwXSBcbiAgICBTT1VSQ0VfRVJST1JfQ0FOVF9ET1dOTE9BRF9DTElQID0gMTY3NzcyMTYsXG4gXG4gICAgLy8gW0VSUk9SXSBSVFNQIGhvc3Qgbm90IHJlYWNoYWJsZSwgY2hlY2sgdGhlIGhvc3QgYW5kIHBvcnQgYWRkcmVzcywgdHJ5IHRvZ2dsaW5nIHRoZSBtdWx0aWNhc3Qgc3VwcG9ydCBzZXR0aW5nIFsweDAyMDAwMDAwXSBcbiAgICBTT1VSQ0VfRVJST1JfUlRTUF9IT1NUX05PVF9SRUFDSEFCTEUgPSAzMzU1NDQzMixcbiBcbiAgICAvLyBbRVJST1JdIFJUU1AgYXV0aGVudGljYXRpb24gZXJyb3IsIGNoZWNrIHRoZSB1c2VyIGFuZCBwYXNzd29yZCBbMHgwNDAwMDAwMF0gXG4gICAgU09VUkNFX0VSUk9SX0FVVEhFTlRJQ0FUSU9OID0gNjcxMDg4NjQsXG4gXG4gICAgLy8gW0VSUk9SXSBPTlZJRiBob3N0IG5vdCByZWFjaGFibGUsIGNoZWNrIHRoZSBhZGRyZXNzIGFuZCB1c2VyXFxwYXNzd29yZCBbMHgwODAwMDAwMF0gXG4gICAgU09VUkNFX0VSUk9SX09OVklGX05PX1JUU1BfVVJMID0gMTM0MjE3NzI4LFxuIFxuICAgIC8vIFtFUlJPUl0gT05WSUYgZXJyb3IsIGNvbnRhY3QgQWdlbnQgVmkgc3VwcG9ydCBbMHgxMDAwMDAwMF0gXG4gICAgU09VUkNFX0VSUk9SX09OVklGX0lOVkFMSURfUlRTUF9VUkwgPSAyNjg0MzU0NTYsXG4gXG4gICAgLy8gW0VSUk9SXSBVbnN1cHBvcnRlZCBVUkksIGNvbnRhY3QgQWdlbnQgVmkgc3VwcG9ydCBbMHgyMDAwMDAwMF0gXG4gICAgU09VUkNFX0VSUk9SX0JBRF9VUkkgPSA1MzY4NzA5MTIsXG4gXG4gICAgLy8gW0VSUk9SXSBMYXJnZSB0aW1lIGdhcCBpbiBzdHJlYW0sIGNoZWNrIHRoZSBzb3VyY2Ugc3RyZWFtIFsweDQwMDAwMDAwXSBcbiAgICBTT1VSQ0VfRVJST1JfTEFSR0VfRlJBTUVfR0FQID0gMTA3Mzc0MTgyNCxcbiBcbn0iXX0=